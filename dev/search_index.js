var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [GPDiffEq]","category":"page"},{"location":"api/#GPDiffEq.gp_negloglikelihood-Tuple{Any, Any, Any}","page":"API","title":"GPDiffEq.gp_negloglikelihood","text":"Returns two function function. 1) to compute the loglikelihood and 2) rebuild the GP from a new set of parameters.\n\n    gp_negloglikelihood(gp, x, y)\n\nArguments:\n\ngp: An AbstractGP.FiniteGP\nx: input data\ny: output data\n\n\n\n\n\n","category":"method"},{"location":"api/#GPDiffEq.gp_train","page":"API","title":"GPDiffEq.gp_train","text":"Simplified copy of sciml_train\n\ngp_train(loss, θ, opt=ADAGrad(0.5), adtype=Optimization.AutoZygote(), args...;\nlower_bounds=nothing, upper_bounds=nothing, maxiters=1000, kwargs...,)\n\n\n\n\n\n","category":"function"},{"location":"api/#Solver-API","page":"API","title":"Solver API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [GPDiffEq.PullSolversModule]","category":"page"},{"location":"api/#GPDiffEq.PullSolversModule.AbstractGPODEFunction","page":"API","title":"GPDiffEq.PullSolversModule.AbstractGPODEFunction","text":"abstract type AbstractGPODEFunction{iip} <: SciMLBase.AbstractODEFunction{iip}\n\n\n\n\n\n","category":"type"},{"location":"api/#GPDiffEq.PullSolversModule.GPODEProblem","page":"API","title":"GPDiffEq.PullSolversModule.GPODEProblem","text":"GPODEProblem(f::ODEFunction,u0,tspan,p=NullParameters(),callback=CallbackSet())\n\nDefine an GPODE problem from an ... \n\n\n\n\n\n","category":"type"},{"location":"api/#GPDiffEq.PullSolversModule.GPODEProblem-2","page":"API","title":"GPDiffEq.PullSolversModule.GPODEProblem","text":"Defines a Gaussian Process differential equation problem.\n\nProblem Type\n\nIn a GPODE problem, we assume that in the ODE\n\ndotu(t) = f(u(t) t p)\n\nthe function f is given by a Gaussian process. \n\nToDo: More details on GP interface and options (Regular, sparse, ...)\n\nFields\n\n\n\n\n\n","category":"type"},{"location":"api/#GPDiffEq.PullSolversModule.GPODESampledEnsembleProblem","page":"API","title":"GPDiffEq.PullSolversModule.GPODESampledEnsembleProblem","text":"GPODESampledEnsembleProblem(prob::SampledGPODEProblem, nGPSamples, [nInValSamples]; kwargs...)\n\nDefines a GPODESampledEnsembleProblem, which is a convenience wrapper around a SciML.EnsembleProblem (https://docs.sciml.ai/DiffEqDocs/stable/features/ensemble/) to compute the empirical distribution of the solution of a GPODEProblem. \n\nArguments:\n\nprob: a SampledGPODEProblem\nreduction: an AbstractReduction, which defines how to reduce the ensemble of solutions. Default is OnlineReduction(FitGenNormal()), which returns a (Mv)Normal distribution for each state.\nnGPSamples: number of samples from the GPODEFunction\nnInValSamples: number of samples from the initial value distribution. Only needed if u0 is a normal distribution (i.e. Normal or MvNormal).\n\nKeyword arguments: The normal keyword arguments for SciML.EnsembleProblems are supported, except for prob_func and reduction.\n\n\n\n\n\n","category":"type"},{"location":"api/#Derivative-GPs","page":"API","title":"Derivative GPs","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [GPDiffEq.DerivativeGPModule]","category":"page"},{"location":"api/#GPDiffEq.DerivativeGPModule.Derivative01Kernel","page":"API","title":"GPDiffEq.DerivativeGPModule.Derivative01Kernel","text":"Derivative01Kernel(kernel)\n\nDerivative of kernel with respect to the second argument:\n\nD^(01) k(xy) = fracpartialpartial y k(xy)\n\nCan be evaluated like a normal kernel.\n\n\n\n\n\n","category":"type"},{"location":"api/#GPDiffEq.DerivativeGPModule.Derivative10Kernel","page":"API","title":"GPDiffEq.DerivativeGPModule.Derivative10Kernel","text":"Derivative10Kernel(kernel)\n\nDerivative of kernel with respect to the first argument:\n\nD^(10) k(xy) = fracpartialpartial x k(xy)\n\nCan be evaluated like a normal kernel.\n\n\n\n\n\n","category":"type"},{"location":"api/#GPDiffEq.DerivativeGPModule.Derivative11Kernel","page":"API","title":"GPDiffEq.DerivativeGPModule.Derivative11Kernel","text":"Derivative11Kernel(kernel)\n\nDifferentiate kernel with respect to both arguments. \n\nD^(11) k(xy) = fracpartial^2partial x partial y k(xy)\n\nCan be evaluated like a normal kernel.\n\n\n\n\n\n","category":"type"},{"location":"api/#GPDiffEq.DerivativeGPModule.DerivativeGP","page":"API","title":"GPDiffEq.DerivativeGPModule.DerivativeGP","text":"DerivativeGP\n\nThe Gaussian Process (GP) \n\n\n\n\n\n","category":"type"},{"location":"api/#GPDiffEq.DerivativeGPModule.DerivativeKernelCollection","page":"API","title":"GPDiffEq.DerivativeGPModule.DerivativeKernelCollection","text":"DerivativeKernelCollection(kernel)\n\n\n\n\n\n","category":"type"},{"location":"api/#AbstractGPs.posterior-Tuple{AbstractGPs.FiniteGP{<:AbstractGPs.PosteriorGP{<:DerivativeGP}}, AbstractVector{<:Real}}","page":"API","title":"AbstractGPs.posterior","text":"posterior(fx::FiniteGP{<:PosteriorGP}, y::AbstractVector{<:Real})\n\nConstruct the posterior distribution over fx.f when f is itself a PosteriorGP by updating the Cholesky factorisation of the covariance matrix and avoiding recomputing it from the original covariance matrix. It does this by using update_chol functionality. Other aspects are similar to a regular posterior.\n\n\n\n\n\n","category":"method"},{"location":"api/#AbstractGPs.posterior-Tuple{AbstractGPs.FiniteGP{<:DerivativeGP}, AbstractVector{<:Real}}","page":"API","title":"AbstractGPs.posterior","text":"posterior(FiniteGP{<:DerivativeGP}, y::AbstractVector{<:Real})\n\nThe posterior of a derivative GP, conditioned on the data y from the output space of the undifferentiated GP. Evaluating this posterior at a point x will return the posterior of the derivative at x, and therefore not return the original data y.\n\n\n\n\n\n","category":"method"},{"location":"api/#GPDiffEq.DerivativeGPModule.differentiate-Tuple{AbstractGPs.PosteriorGP}","page":"API","title":"GPDiffEq.DerivativeGPModule.differentiate","text":"differentiate(gpp::PosteriorGP)\n\n\n\n\n\n","category":"method"},{"location":"theory/#Theory","page":"Theory","title":"Theory","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"This packages uses GPs to learn the vector field of unknown dynamical systems. The rationale is that for many systems, the vector field is substantially simpler than the flow map (see e.g. emergence)","category":"page"},{"location":"theory/#Modelling-choices","page":"Theory","title":"Modelling choices","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"While GP models are sometimes referred to as non-parametric, there are some modelling choices that need to be made. ","category":"page"},{"location":"theory/#Kernel","page":"Theory","title":"Kernel","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"GPs represent a distribution over a function space, constrained by the available data points. The choice of kernel determines the Reproducing Kernel Hilbert Space (RKHS) underpinning the distribution, and therefore influences the accuracy of the model uncertainty behaviour. ","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"This package uses KernelFunction.jl, which means that all kernels implemented there are available. ","category":"page"},{"location":"theory/#Inducing-Points","page":"Theory","title":"Inducing Points","text":"","category":"section"},{"location":"theory/","page":"Theory","title":"Theory","text":"To limit the computational cost, we use inducing points by default. Various methods to select inducing points can be found in the InducingPoints.jl package.","category":"page"},{"location":"theory/","page":"Theory","title":"Theory","text":"","category":"page"},{"location":"quickstart/#Quick-Start","page":"Quick Start","title":"Quick Start","text":"","category":"section"},{"location":"quickstart/#Setup","page":"Quick Start","title":"Setup","text":"","category":"section"},{"location":"quickstart/","page":"Quick Start","title":"Quick Start","text":"First we define an ODE and generate some data points from it. ","category":"page"},{"location":"solverapi/#Solver-API","page":"Solver API","title":"Solver API","text":"","category":"section"},{"location":"solverapi/","page":"Solver API","title":"Solver API","text":"<!– @autodocs Modules = [GPDiffEq.PullSolversModule] –>","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"EditURL = \"https://github.com/Crown421/GPDiffEq.jl/blob/main/examples/gpode/script.jl\"","category":"page"},{"location":"examples/gpode/#Trajectory-Uncertainty","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"(Image: )","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"When the vector field dotx = f(x) is a Gaussian process, we have uncertainty in the vector field, which we can lift to the trajectory. In this example we show how to use the approximate PULL solvers, introduced in this paper, to propagate this uncertainty.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"note: Note\nThe implementation of the PULL solvers is still in progress and the interface may change.","category":"page"},{"location":"examples/gpode/#D-Example","page":"Trajectory Uncertainty","title":"1D Example","text":"","category":"section"},{"location":"examples/gpode/#Setup","page":"Trajectory Uncertainty","title":"Setup","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"using GPDiffEq\nusing Plots\nusing LinearAlgebra","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"using StatsPlots","category":"page"},{"location":"examples/gpode/#Defining-a-simple-GP","page":"Trajectory Uncertainty","title":"Defining a simple GP","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"In this example we sample the vector field values directly instead of learning them from a trajectory.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"ts = range(-4.25, 4.252; length=100)\nf(x) = x * cos(x)\n\nX = range(-3.0, 3.0; length=10)\nσ_n = 0.1\ny = f.(X) .+ σ_n * randn(length(X))\np = plot(ts, f.(ts); label=\"truth\", xlabel=\"x\", ylabel=\"f(x)\")\nscatter!(p, X, y; label=\"data\")","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"(Image: )","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"With this data, we define the GP.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"ker = SqExponentialKernel()\ngp = GP(ker)\nfx = gp(X, σ_n^2)\n\nfp = posterior(fx, y)\n\nplot!(p, ts, mean(fp, ts); ribbons=sqrt.(var(fp, ts)), label=\"GP posterior\")","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"(Image: )","category":"page"},{"location":"examples/gpode/#A-GPODE-problem","page":"Trajectory Uncertainty","title":"A GPODE problem","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"We define a GPODEProblem with the GP as the vector field.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"u0 = 1.0\ntspan = (0.0, 8.0)\nff = GPODEFunction(fp)\n\nprob = GPODEProblem(ff, u0, tspan)","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"GPODEProblem with uType Float64 and tType Float64. In-place: false\ntimespan: (0.0, 8.0)\nu0: 1.0","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"and integrate with the PULL Euler solver.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"sol = solve(prob, PULLEuler(); dt=0.1)","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"This results in a trajectory where each state is a normal distribution, and we can plot the trajectories of the means and their standard deviations.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"plot(sol.t, mean.(sol.u); ribbons=std.(sol.u), label=\"μ ± σ\", xlabel=\"t\", ylabel=\"u(t)\")","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"(Image: )","category":"page"},{"location":"examples/gpode/#D-Example-2","page":"Trajectory Uncertainty","title":"2D Example","text":"","category":"section"},{"location":"examples/gpode/#Setup-2","page":"Trajectory Uncertainty","title":"Setup","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"function fun(x)\n    return [-0.1 2.0; -2.0 -0.1] * (x .^ 3)\nend\nxrange = range(-2.2, 2.2; length=6)\nx = collect.(Iterators.product(xrange, xrange))[:]\ny = fun.(x)\n# This is annoying UX, needs fix\ny = ColVecs(reduce(hcat, y))\nxMO, yMO = prepare_isotopic_multi_output_data(x, y)","category":"page"},{"location":"examples/gpode/#Defining-a-Multi-Output-GP","page":"Trajectory Uncertainty","title":"Defining a Multi-Output GP","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"σ_n = 3e-2\nker = SqExponentialKernel()\nmker = IndependentMOKernel(ker)\n\ngp = GP(mker)\nfx = gp(xMO, σ_n)\nfp = posterior(fx, yMO)","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"AbstractGPs.PosteriorGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, KernelFunctions.MOInputIsotopicByFeatures{Vector{Float64}, Vector{Vector{Float64}}, Int64}, Vector{Float64}}}}(AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}(AbstractGPs.ZeroMean{Float64}(), Independent Multi-Output Kernel\n\tSquared Exponential Kernel (metric = Distances.Euclidean(0.0))), (α = [-29.2124703130299, 32.2874671880857, -7.965684324886952, -23.297037809412693, -16.60262823825942, 17.04785570559112, -18.22035634735454, -15.306706476310413, -5.602061180182959, 23.975425084666156, -32.28746718808571, -29.21247031302988, 23.975425084666156, 5.6020611801829645, 12.631131521828273, -13.960724313599602, 15.498661385982752, 14.41021704844255, 13.983933194686868, -15.884346777476033, 13.960724313599629, 12.63113152182824, 23.297037809412682, -7.965684324886963, -15.306706476310406, 18.220356347354503, -15.884346777476066, -13.983933194686836, -10.937943645620454, 12.08930613463313, -12.089306134633127, -10.937943645620477, -14.410217048442616, 15.4986613859828, -17.04785570559108, -16.602628238259427, 17.04785570559113, 16.602628238259474, 14.410217048442554, -15.498661385982798, 12.089306134633159, 10.937943645620454, 10.937943645620438, -12.089306134633114, 15.88434677747611, 13.983933194686822, 15.306706476310364, -18.22035634735452, -23.297037809412696, 7.9656843248868965, -13.960724313599627, -12.631131521828209, -13.983933194686838, 15.884346777476038, -15.49866138598281, -14.410217048442561, -12.631131521828255, 13.960724313599634, -23.975425084666128, -5.602061180182979, 32.28746718808571, 29.212470313029925, 5.602061180182997, -23.975425084666178, 18.22035634735448, 15.306706476310405, 16.602628238259502, -17.04785570559111, 7.965684324886902, 23.29703780941267, 29.212470313029897, -32.287467188085685], C = LinearAlgebra.Cholesky{Float64, Matrix{Float64}}([1.014889156509222 0.0 0.6689945260858627 0.0 0.20938525445078104 0.0 0.030210087079326205 0.0 0.0020092788525361955 0.0 6.160426818418967e-5 0.0 0.6689945260858627 0.0 0.4542173726600899 0.0 0.1421632262177757 0.0 0.02051129844258684 0.0 0.0013642105065943936 0.0 4.1826543788011286e-5 0.0 0.20938525445078104 0.0 0.1421632262177757 0.0 0.044494957932335086 0.0 0.006419728825951168 0.0 0.00042697743092001683 0.0 1.309108097653619e-5 0.0 0.030210087079326205 0.0 0.02051129844258684 0.0 0.006419728825951168 0.0 0.0009262379405195118 0.0 6.160426818418967e-5 0.0 1.8887800733677394e-6 0.0 0.0020092788525361955 0.0 0.0013642105065943936 0.0 0.00042697743092001683 0.0 6.160426818418967e-5 0.0 4.097312032349871e-6 0.0 1.2562313536350808e-7 0.0 6.160426818418967e-5 0.0 4.1826543788011286e-5 0.0 1.309108097653619e-5 0.0 1.8887800733677394e-6 0.0 1.2562313536350808e-7 0.0 3.851591485822847e-9 0.0; 0.0 1.014889156509222 0.0 0.6689945260858627 0.0 0.20938525445078104 0.0 0.030210087079326205 0.0 0.0020092788525361955 0.0 6.160426818418967e-5 0.0 0.6689945260858627 0.0 0.4542173726600899 0.0 0.1421632262177757 0.0 0.02051129844258684 0.0 0.0013642105065943936 0.0 4.1826543788011286e-5 0.0 0.20938525445078104 0.0 0.1421632262177757 0.0 0.044494957932335086 0.0 0.006419728825951168 0.0 0.00042697743092001683 0.0 1.309108097653619e-5 0.0 0.030210087079326205 0.0 0.02051129844258684 0.0 0.006419728825951168 0.0 0.0009262379405195118 0.0 6.160426818418967e-5 0.0 1.8887800733677394e-6 0.0 0.0020092788525361955 0.0 0.0013642105065943936 0.0 0.00042697743092001683 0.0 6.160426818418967e-5 0.0 4.097312032349871e-6 0.0 1.2562313536350808e-7 0.0 6.160426818418967e-5 0.0 4.1826543788011286e-5 0.0 1.309108097653619e-5 0.0 1.8887800733677394e-6 0.0 1.2562313536350808e-7 0.0 3.851591485822847e-9; 0.6789552902885679 0.0 0.7631817110407927 0.0 0.7060935730273239 0.0 0.2519615428469006 0.0 0.0384124682446875 0.0 0.0026179642052988543 0.0 0.017592940296846042 0.0 0.49147712648189595 0.0 0.4794059668456588 0.0 0.1710706224651728 0.0 0.026080348527772197 0.0 0.001777480646973764 0.0 0.005506326489911649 0.0 0.15382497041828208 0.0 0.15004687847074777 0.0 0.05354253946365834 0.0 0.00816275798937069 0.0 0.0005563247874769198 0.0 0.0007944523275230655 0.0 0.022193853924911588 0.0 0.021648751133274746 0.0 0.007725113136014078 0.0 0.0011777220430979319 0.0 8.026649401911937e-5 0.0 5.283918106057568e-5 0.0 0.0014761176037165165 0.0 0.0014398627094880303 0.0 0.0005137987989536391 0.0 7.833052546815688e-5 0.0 5.338540354960031e-6 0.0 1.6200434681228406e-6 0.0 4.525760305294289e-5 0.0 4.4146031991404074e-5 0.0 1.5753014552212005e-5 0.0 2.401605278360389e-6 0.0 1.636790589439364e-7 0.0; 0.0 0.6789552902885679 0.0 0.7631817110407927 0.0 0.7060935730273239 0.0 0.2519615428469006 0.0 0.0384124682446875 0.0 0.0026179642052988543 0.0 0.017592940296846042 0.0 0.49147712648189595 0.0 0.4794059668456588 0.0 0.1710706224651728 0.0 0.026080348527772197 0.0 0.001777480646973764 0.0 0.005506326489911649 0.0 0.15382497041828208 0.0 0.15004687847074777 0.0 0.05354253946365834 0.0 0.00816275798937069 0.0 0.0005563247874769198 0.0 0.0007944523275230655 0.0 0.022193853924911588 0.0 0.021648751133274746 0.0 0.007725113136014078 0.0 0.0011777220430979319 0.0 8.026649401911937e-5 0.0 5.283918106057568e-5 0.0 0.0014761176037165165 0.0 0.0014398627094880303 0.0 0.0005137987989536391 0.0 7.833052546815688e-5 0.0 5.338540354960031e-6 0.0 1.6200434681228406e-6 0.0 4.525760305294289e-5 0.0 4.4146031991404074e-5 0.0 1.5753014552212005e-5 0.0 2.401605278360389e-6 0.0 1.636790589439364e-7; 0.21250282427502198 0.0 0.6789552902885679 0.0 0.6982762213824045 0.0 0.7084894234044212 0.0 0.2648798688767606 0.0 0.041242222185151854 0.0 -0.011771751851814597 0.0 0.02698792424052936 0.0 0.4449284186101511 0.0 0.48103264213392893 0.0 0.17984158826481877 0.0 0.02800162493586539 0.0 -0.0036843818009166447 0.0 0.008446815577496021 0.0 0.13925592289691358 0.0 0.15055600344242137 0.0 0.05628772022990913 0.0 0.008764088693722737 0.0 -0.0005315822994849009 0.0 0.0012187058482628175 0.0 0.020091832961506812 0.0 0.021722207641799482 0.0 0.008121187588412647 0.0 0.0012644819870567276 0.0 -3.535564362767208e-5 0.0 8.105636643637566e-5 0.0 0.0013363117746811113 0.0 0.0014447483163640494 0.0 0.0005401417889339264 0.0 8.410094645985703e-5 0.0 -1.0840001372206e-6 0.0 2.485179262041945e-6 0.0 4.0971171742157514e-5 0.0 4.429582415979967e-5 0.0 1.656068772185226e-5 0.0 2.578525750030944e-6 0.0; 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.6982762213824045 0.0 0.7084894234044212 0.0 0.2648798688767606 0.0 0.041242222185151854 0.0 -0.011771751851814597 0.0 0.02698792424052936 0.0 0.4449284186101511 0.0 0.48103264213392893 0.0 0.17984158826481877 0.0 0.02800162493586539 0.0 -0.0036843818009166447 0.0 0.008446815577496021 0.0 0.13925592289691358 0.0 0.15055600344242137 0.0 0.05628772022990913 0.0 0.008764088693722737 0.0 -0.0005315822994849009 0.0 0.0012187058482628175 0.0 0.020091832961506812 0.0 0.021722207641799482 0.0 0.008121187588412647 0.0 0.0012644819870567276 0.0 -3.535564362767208e-5 0.0 8.105636643637566e-5 0.0 0.0013363117746811113 0.0 0.0014447483163640494 0.0 0.0005401417889339264 0.0 8.410094645985703e-5 0.0 -1.0840001372206e-6 0.0 2.485179262041945e-6 0.0 4.0971171742157514e-5 0.0 4.429582415979967e-5 0.0 1.656068772185226e-5 0.0 2.578525750030944e-6; 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.6809151698184875 0.0 0.7072122355453032 0.0 0.26820030861882116 0.0 0.006628915007735746 0.0 -0.01820494554103567 0.0 0.030351177165044704 0.0 0.43239730584753405 0.0 0.48016548868028835 0.0 0.18209601839377515 0.0 0.0020747509904874358 0.0 -0.005697874953737825 0.0 0.00949946330766829 0.0 0.13533387251826026 0.0 0.15028459741522893 0.0 0.056993323052932005 0.0 0.00029934490016954665 0.0 -0.0008220889239361124 0.0 0.0013705817751315612 0.0 0.019525959859413702 0.0 0.021683049202792674 0.0 0.00822299190497186 0.0 1.990948837538615e-5 0.0 -5.4677296541110534e-5 0.0 9.115766429974814e-5 0.0 0.0012986754430058933 0.0 0.0014421438808591765 0.0 0.000546912814115754 0.0 6.104227194443878e-7 0.0 -1.676399886184701e-6 0.0 2.794883941309387e-6 0.0 3.9817245960744605e-5 0.0 4.4215972454244676e-5 0.0 1.676828660771956e-5 0.0; 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.6809151698184875 0.0 0.7072122355453032 0.0 0.26820030861882116 0.0 0.006628915007735746 0.0 -0.01820494554103567 0.0 0.030351177165044704 0.0 0.43239730584753405 0.0 0.48016548868028835 0.0 0.18209601839377515 0.0 0.0020747509904874358 0.0 -0.005697874953737825 0.0 0.00949946330766829 0.0 0.13533387251826026 0.0 0.15028459741522893 0.0 0.056993323052932005 0.0 0.00029934490016954665 0.0 -0.0008220889239361124 0.0 0.0013705817751315612 0.0 0.019525959859413702 0.0 0.021683049202792674 0.0 0.00822299190497186 0.0 1.990948837538615e-5 0.0 -5.4677296541110534e-5 0.0 9.115766429974814e-5 0.0 0.0012986754430058933 0.0 0.0014421438808591765 0.0 0.000546912814115754 0.0 6.104227194443878e-7 0.0 -1.676399886184701e-6 0.0 2.794883941309387e-6 0.0 3.9817245960744605e-5 0.0 4.4215972454244676e-5 0.0 1.676828660771956e-5; 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.6769120726066926 0.0 0.7065257795786849 0.0 -0.003258048080426371 0.0 0.009973818126717113 0.0 -0.020295398605394057 0.0 0.031252655713538594 0.0 0.4295024795917274 0.0 0.4796994157702029 0.0 -0.0010197201916198914 0.0 0.003121655506700546 0.0 -0.006352155414534762 0.0 0.009781612574812104 0.0 0.13442783531088703 0.0 0.15013872358358216 0.0 -0.00014712514434785895 0.0 0.0004503921966064201 0.0 -0.0009164884543463292 0.0 0.0014112902479041065 0.0 0.019395236886568017 0.0 0.02166200253850772 0.0 -9.785322380510454e-6 0.0 2.9955673865234267e-5 0.0 -6.0955827935096114e-5 0.0 9.386519285622488e-5 0.0 0.0012899810322883794 0.0 0.0014407440630647712 0.0 -3.0001690578527017e-7 0.0 9.184376594133041e-7 0.0 -1.8688989667925127e-6 0.0 2.877896468465108e-6 0.0 3.955067628632181e-5 0.0 4.4173054194936494e-5 0.0; 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.6769120726066926 0.0 0.7065257795786849 0.0 -0.003258048080426371 0.0 0.009973818126717113 0.0 -0.020295398605394057 0.0 0.031252655713538594 0.0 0.4295024795917274 0.0 0.4796994157702029 0.0 -0.0010197201916198914 0.0 0.003121655506700546 0.0 -0.006352155414534762 0.0 0.009781612574812104 0.0 0.13442783531088703 0.0 0.15013872358358216 0.0 -0.00014712514434785895 0.0 0.0004503921966064201 0.0 -0.0009164884543463292 0.0 0.0014112902479041065 0.0 0.019395236886568017 0.0 0.02166200253850772 0.0 -9.785322380510454e-6 0.0 2.9955673865234267e-5 0.0 -6.0955827935096114e-5 0.0 9.386519285622488e-5 0.0 0.0012899810322883794 0.0 0.0014407440630647712 0.0 -3.0001690578527017e-7 0.0 9.184376594133041e-7 0.0 -1.8688989667925127e-6 0.0 2.877896468465108e-6 0.0 3.955067628632181e-5 0.0 4.4173054194936494e-5; 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.676152452354545 0.0 0.0014267341790301538 0.0 -0.004743543227401908 0.0 0.010947323150461135 0.0 -0.020791104845284653 0.0 0.031442245692775365 0.0 0.42895292631428655 0.0 0.0004465464027900033 0.0 -0.0014846578961997953 0.0 0.003426347980491566 0.0 -0.006507304034030392 0.0 0.009840951395229657 0.0 0.13425583337612612 0.0 6.442767781633364e-5 0.0 -0.00021420631765522842 0.0 0.0004943532013571431 0.0 -0.0009388732842499215 0.0 0.0014198516479735637 0.0 0.019370420461741124 0.0 4.285097564083825e-6 0.0 -1.4246904453276158e-5 0.0 3.28795289653512e-5 0.0 -6.244464738883725e-5 0.0 9.443461326413419e-5 0.0 0.0012883304869765009 0.0 1.3138061907137205e-7 0.0 -4.368085204431969e-7 0.0 1.008082734556534e-6 0.0 -1.9145460071673857e-6 0.0 2.895354835418045e-6 0.0 3.9500070748959586e-5 0.0; 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.676152452354545 0.0 0.0014267341790301538 0.0 -0.004743543227401908 0.0 0.010947323150461135 0.0 -0.020791104845284653 0.0 0.031442245692775365 0.0 0.42895292631428655 0.0 0.0004465464027900033 0.0 -0.0014846578961997953 0.0 0.003426347980491566 0.0 -0.006507304034030392 0.0 0.009840951395229657 0.0 0.13425583337612612 0.0 6.442767781633364e-5 0.0 -0.00021420631765522842 0.0 0.0004943532013571431 0.0 -0.0009388732842499215 0.0 0.0014198516479735637 0.0 0.019370420461741124 0.0 4.285097564083825e-6 0.0 -1.4246904453276158e-5 0.0 3.28795289653512e-5 0.0 -6.244464738883725e-5 0.0 9.443461326413419e-5 0.0 0.0012883304869765009 0.0 1.3138061907137205e-7 0.0 -4.368085204431969e-7 0.0 1.008082734556534e-6 0.0 -1.9145460071673857e-6 0.0 2.895354835418045e-6 0.0 3.9500070748959586e-5; 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.7628509981741592 0.0 0.48098182292311575 0.0 0.14933046309426323 0.0 0.02209614478635778 0.0 0.0012535479200755145 0.0 0.00010051736813008842 0.0 0.7061926190794915 0.0 0.47626224081883206 0.0 0.14868434184692617 0.0 0.021624543458724704 0.0 0.0013706256602182179 0.0 6.145450725249719e-5 0.0 0.2520408990030971 0.0 0.17066122270491144 0.0 0.05335977945928573 0.0 0.007723615365003919 0.0 0.0005039419651243895 0.0 1.825434793348968e-5 0.0 0.038427133926506256 0.0 0.026059493089511804 0.0 0.008152597495677122 0.0 0.0011779102515385152 0.0 7.769408883514263e-5 0.0 2.568556387482671e-6 0.0 0.00261903823048248 0.0 0.0017772651455991932 0.0 0.0005561459497349377 0.0 8.029140779903205e-5 0.0 5.320300504577596e-6 0.0 1.688367985392816e-7 0.0; 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.7628509981741592 0.0 0.48098182292311575 0.0 0.14933046309426323 0.0 0.02209614478635778 0.0 0.0012535479200755145 0.0 0.00010051736813008842 0.0 0.7061926190794915 0.0 0.47626224081883206 0.0 0.14868434184692617 0.0 0.021624543458724704 0.0 0.0013706256602182179 0.0 6.145450725249719e-5 0.0 0.2520408990030971 0.0 0.17066122270491144 0.0 0.05335977945928573 0.0 0.007723615365003919 0.0 0.0005039419651243895 0.0 1.825434793348968e-5 0.0 0.038427133926506256 0.0 0.026059493089511804 0.0 0.008152597495677122 0.0 0.0011779102515385152 0.0 7.769408883514263e-5 0.0 2.568556387482671e-6 0.0 0.00261903823048248 0.0 0.0017772651455991932 0.0 0.0005561459497349377 0.0 8.029140779903205e-5 0.0 5.320300504577596e-6 0.0 1.688367985392816e-7; 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.5912795888486938 0.0 0.5001680798602532 0.0 0.1741315974169921 0.0 0.027690143415810962 0.0 0.0015355227412770314 0.0 0.040000218150024525 0.0 0.5231661720020548 0.0 0.49385291081719285 0.0 0.17406341198294997 0.0 0.026847629477832723 0.0 0.001718348935524361 0.0 0.015156946401319068 0.0 0.18627423652082212 0.0 0.1768253407284777 0.0 0.06253522844047867 0.0 0.009563963440288578 0.0 0.0006353214767705999 0.0 0.0023622621445206385 0.0 0.028374177252105115 0.0 0.02699264862954959 0.0 0.009558383086399154 0.0 0.0014571100468772954 0.0 9.814914193061837e-5 0.0 0.0001624928540570312 0.0 0.001933117380298132 0.0 0.0018406723190989025 0.0 0.0006521576836932236 0.0 9.928030080660538e-5 0.0 6.726748554114852e-6 0.0; 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.5912795888486938 0.0 0.5001680798602532 0.0 0.1741315974169921 0.0 0.027690143415810962 0.0 0.0015355227412770314 0.0 0.040000218150024525 0.0 0.5231661720020548 0.0 0.49385291081719285 0.0 0.17406341198294997 0.0 0.026847629477832723 0.0 0.001718348935524361 0.0 0.015156946401319068 0.0 0.18627423652082212 0.0 0.1768253407284777 0.0 0.06253522844047867 0.0 0.009563963440288578 0.0 0.0006353214767705999 0.0 0.0023622621445206385 0.0 0.028374177252105115 0.0 0.02699264862954959 0.0 0.009558383086399154 0.0 0.0014571100468772954 0.0 9.814914193061837e-5 0.0 0.0001624928540570312 0.0 0.001933117380298132 0.0 0.0018406723190989025 0.0 0.0006521576836932236 0.0 9.928030080660538e-5 0.0 6.726748554114852e-6; 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5550473871789207 0.0 0.4996787751184348 0.0 0.17935655021533023 0.0 0.028957953340791855 0.0 -0.021689867990143066 0.0 0.05536127523032375 0.0 0.48476968059567094 0.0 0.4923623406757818 0.0 0.17960295617445354 0.0 0.02815554960872672 0.0 -0.008130556104384682 0.0 0.020835972566297878 0.0 0.17259060462008743 0.0 0.17619168739386962 0.0 0.06455643332360018 0.0 0.010037835266036148 0.0 -0.0012623294956014355 0.0 0.0032395782870489912 0.0 0.026289090949721147 0.0 0.02689010951395341 0.0 0.009869118095832586 0.0 0.001529770969443062 0.0 -8.669428746076015e-5 0.0 0.00022261996386109867 0.0 0.0017910403635902604 0.0 0.0018335116172170443 0.0 0.0006734108168783488 0.0 0.00010424454656575289 0.0; 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5550473871789207 0.0 0.4996787751184348 0.0 0.17935655021533023 0.0 0.028957953340791855 0.0 -0.021689867990143066 0.0 0.05536127523032375 0.0 0.48476968059567094 0.0 0.4923623406757818 0.0 0.17960295617445354 0.0 0.02815554960872672 0.0 -0.008130556104384682 0.0 0.020835972566297878 0.0 0.17259060462008743 0.0 0.17619168739386962 0.0 0.06455643332360018 0.0 0.010037835266036148 0.0 -0.0012623294956014355 0.0 0.0032395782870489912 0.0 0.026289090949721147 0.0 0.02689010951395341 0.0 0.009869118095832586 0.0 0.001529770969443062 0.0 -8.669428746076015e-5 0.0 0.00022261996386109867 0.0 0.0017910403635902604 0.0 0.0018335116172170443 0.0 0.0006734108168783488 0.0 0.00010424454656575289; 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5477740101500929 0.0 0.4985529088795399 0.0 0.1810557132360129 0.0 0.008698541556049154 0.0 -0.02914526715648662 0.0 0.05853641934160263 0.0 0.4773354215167598 0.0 0.4912071685691707 0.0 0.18083130900939687 0.0 0.003187808271913204 0.0 -0.010821535580610673 0.0 0.021936866899115667 0.0 0.1699739787781884 0.0 0.1757737571328236 0.0 0.06495166663385227 0.0 0.0004908835881463935 0.0 -0.0016743646004294204 0.0 0.0034055399244666915 0.0 0.025892288789214388 0.0 0.026826060811253723 0.0 0.00992685912482983 0.0 3.359759211626568e-5 0.0 -0.00011482794059848422 0.0 0.0002338765474678254 0.0 0.0017640579857704322 0.0 0.0018291367581518166 0.0 0.0006772731611160428 0.0; 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5477740101500929 0.0 0.4985529088795399 0.0 0.1810557132360129 0.0 0.008698541556049154 0.0 -0.02914526715648662 0.0 0.05853641934160263 0.0 0.4773354215167598 0.0 0.4912071685691707 0.0 0.18083130900939687 0.0 0.003187808271913204 0.0 -0.010821535580610673 0.0 0.021936866899115667 0.0 0.1699739787781884 0.0 0.1757737571328236 0.0 0.06495166663385227 0.0 0.0004908835881463935 0.0 -0.0016743646004294204 0.0 0.0034055399244666915 0.0 0.025892288789214388 0.0 0.026826060811253723 0.0 0.00992685912482983 0.0 3.359759211626568e-5 0.0 -0.00011482794059848422 0.0 0.0002338765474678254 0.0 0.0017640579857704322 0.0 0.0018291367581518166 0.0 0.0006772731611160428; 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5472321040375397 0.0 0.4959781521481599 0.0 -0.0025468867802050103 0.0 0.011057808576734416 0.0 -0.030462769721581993 0.0 0.05918382633569531 0.0 0.47614183396924115 0.0 0.4898572435507518 0.0 -0.0008812226518520693 0.0 0.003990100027672844 0.0 -0.011264744025850452 0.0 0.022174964740233484 0.0 0.16948659072567943 0.0 0.17540870594855548 0.0 -0.00013273525958178934 0.0 0.0006108866183308972 0.0 -0.0017403625109164056 0.0 0.0034422517220202686 0.0 0.02581439875322268 0.0 0.026777212607023086 0.0 -8.999714620245132e-6 0.0 4.170927410980546e-5 0.0 -0.00011928038361816109 0.0 0.00023639058491288525 0.0 0.0017586454170706724 0.0 0.0018260050166272715 0.0; 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5472321040375397 0.0 0.4959781521481599 0.0 -0.0025468867802050103 0.0 0.011057808576734416 0.0 -0.030462769721581993 0.0 0.05918382633569531 0.0 0.47614183396924115 0.0 0.4898572435507518 0.0 -0.0008812226518520693 0.0 0.003990100027672844 0.0 -0.011264744025850452 0.0 0.022174964740233484 0.0 0.16948659072567943 0.0 0.17540870594855548 0.0 -0.00013273525958178934 0.0 0.0006108866183308972 0.0 -0.0017403625109164056 0.0 0.0034422517220202686 0.0 0.02581439875322268 0.0 0.026777212607023086 0.0 -8.999714620245132e-6 0.0 4.170927410980546e-5 0.0 -0.00011928038361816109 0.0 0.00023639058491288525 0.0 0.0017586454170706724 0.0 0.0018260050166272715; 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.549841082237485 0.0 0.0004198458613384773 0.0 -0.0029395522415249526 0.0 0.01126800873651583 0.0 -0.03070241499024735 0.0 0.05998645554200957 0.0 0.4768700428263126 0.0 0.00011031836699072342 0.0 -0.0009854098698083588 0.0 0.004060238520622754 0.0 -0.011396835304061622 0.0 0.022585501376773044 0.0 0.1695385188022506 0.0 1.451421818037625e-5 0.0 -0.0001465228982380779 0.0 0.000621295446775797 0.0 -0.001763217424200242 0.0 0.0035120806995766318 0.0 0.025810185777186846 0.0 9.223428165088163e-7 0.0 -9.878577430889193e-6 0.0 4.241043579392516e-5 0.0 -0.00012091687771615512 0.0 0.00024135982027373974 0.0 0.0017580063324531864 0.0; 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.549841082237485 0.0 0.0004198458613384773 0.0 -0.0029395522415249526 0.0 0.01126800873651583 0.0 -0.03070241499024735 0.0 0.05998645554200957 0.0 0.4768700428263126 0.0 0.00011031836699072342 0.0 -0.0009854098698083588 0.0 0.004060238520622754 0.0 -0.011396835304061622 0.0 0.022585501376773044 0.0 0.1695385188022506 0.0 1.451421818037625e-5 0.0 -0.0001465228982380779 0.0 0.000621295446775797 0.0 -0.001763217424200242 0.0 0.0035120806995766318 0.0 0.025810185777186846 0.0 9.223428165088163e-7 0.0 -9.878577430889193e-6 0.0 4.241043579392516e-5 0.0 -0.00012091687771615512 0.0 0.00024135982027373974 0.0 0.0017580063324531864; 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486087 0.0 0.006515313173187519 0.0 0.0004333347647148905 0.0 1.3285996130070735e-5 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.6965971335696335 0.0 0.42005949856076175 0.0 0.12634916835506177 0.0 0.0197600326415278 0.0 0.0010071077341264223 0.0 5.296592689788884e-5 0.0 0.7089040600157462 0.0 0.47251988592046296 0.0 0.14592862447981617 0.0 0.0216339167633942 0.0 0.0013267381747578439 0.0 4.686489143776417e-5 0.0 0.26531575332853236 0.0 0.1787762813818233 0.0 0.055647158384013656 0.0 0.008119030433188203 0.0 0.0005227543107410472 0.0 1.687199814679976e-5 0.0 0.041327667991422366 0.0 0.027966268166392513 0.0 0.008731861649556983 0.0 0.00126604033773585 0.0 8.302504508349342e-5 0.0 2.6002200514624297e-6 0.0; 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486087 0.0 0.006515313173187519 0.0 0.0004333347647148905 0.0 1.3285996130070735e-5 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.6965971335696335 0.0 0.42005949856076175 0.0 0.12634916835506177 0.0 0.0197600326415278 0.0 0.0010071077341264223 0.0 5.296592689788884e-5 0.0 0.7089040600157462 0.0 0.47251988592046296 0.0 0.14592862447981617 0.0 0.0216339167633942 0.0 0.0013267381747578439 0.0 4.686489143776417e-5 0.0 0.26531575332853236 0.0 0.1787762813818233 0.0 0.055647158384013656 0.0 0.008119030433188203 0.0 0.0005227543107410472 0.0 1.687199814679976e-5 0.0 0.041327667991422366 0.0 0.027966268166392513 0.0 0.008731861649556983 0.0 0.00126604033773585 0.0 8.302504508349342e-5 0.0 2.6002200514624297e-6; 0.14427991674278806 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.0004333347647148905 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.5522571419128773 0.0 0.4371805552881499 0.0 0.14315673768559975 0.0 0.024413168710876468 0.0 0.0012300420737735036 0.0 0.056810698726811014 0.0 0.5321332789251538 0.0 0.4863300430770859 0.0 0.16716961853069892 0.0 0.026371253901839243 0.0 0.001637852909612466 0.0 0.023696647565359694 0.0 0.19826477672491902 0.0 0.18337942399550383 0.0 0.0639468329401429 0.0 0.009857558620913988 0.0 0.0006465501018336296 0.0 0.0038408606918854805 0.0 0.03082894279782215 0.0 0.028648022907858305 0.0 0.010046338999300132 0.0 0.001534751640842242 0.0 0.00010274699407624456 0.0; 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.0004333347647148905 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.5522571419128773 0.0 0.4371805552881499 0.0 0.14315673768559975 0.0 0.024413168710876468 0.0 0.0012300420737735036 0.0 0.056810698726811014 0.0 0.5321332789251538 0.0 0.4863300430770859 0.0 0.16716961853069892 0.0 0.026371253901839243 0.0 0.001637852909612466 0.0 0.023696647565359694 0.0 0.19826477672491902 0.0 0.18337942399550383 0.0 0.0639468329401429 0.0 0.009857558620913988 0.0 0.0006465501018336296 0.0 0.0038408606918854805 0.0 0.03082894279782215 0.0 0.028648022907858305 0.0 0.010046338999300132 0.0 0.001534751640842242 0.0 0.00010274699407624456; 0.04515745032486087 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.1442799167427881 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5228764730819182 0.0 0.4393673071203676 0.0 0.14641987977293391 0.0 0.025283867414712818 0.0 -0.024389144244044203 0.0 0.07178966617954592 0.0 0.4990694992551516 0.0 0.48610955311710063 0.0 0.17157305960571492 0.0 0.027440832317681338 0.0 -0.00978909468593953 0.0 0.02941798907294079 0.0 0.1861498025975701 0.0 0.1829939391156663 0.0 0.0656942706178975 0.0 0.01027183801174106 0.0 -0.0015649514505829381 0.0 0.004738495132211319 0.0 0.028958194350103262 0.0 0.028569196413683984 0.0 0.010324658480189177 0.0 0.0016001342377356506 0.0; 0.0 0.04515745032486087 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.1442799167427881 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5228764730819182 0.0 0.4393673071203676 0.0 0.14641987977293391 0.0 0.025283867414712818 0.0 -0.024389144244044203 0.0 0.07178966617954592 0.0 0.4990694992551516 0.0 0.48610955311710063 0.0 0.17157305960571492 0.0 0.027440832317681338 0.0 -0.00978909468593953 0.0 0.02941798907294079 0.0 0.1861498025975701 0.0 0.1829939391156663 0.0 0.0656942706178975 0.0 0.01027183801174106 0.0 -0.0015649514505829381 0.0 0.004738495132211319 0.0 0.028958194350103262 0.0 0.028569196413683984 0.0 0.010324658480189177 0.0 0.0016001342377356506; 0.006515313173187519 0.0 0.04515745032486089 0.0 0.1442799167427881 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486087 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5162972161145899 0.0 0.43901715298067556 0.0 0.14861290348209225 0.0 0.007060110455716438 0.0 -0.030310752106327832 0.0 0.074011989176752 0.0 0.49208886052936174 0.0 0.48555929487107646 0.0 0.17308143138790666 0.0 0.002559995970445214 0.0 -0.01184452519222572 0.0 0.030071134261693493 0.0 0.183649714423355 0.0 0.18276738811038404 0.0 0.06615888824211666 0.0 0.00039323748698674157 0.0 -0.0018747929158333082 0.0 0.004829010394278859 0.0 0.028575772013480265 0.0 0.028532613017719758 0.0 0.010390880780267956 0.0; 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.1442799167427881 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486087 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5162972161145899 0.0 0.43901715298067556 0.0 0.14861290348209225 0.0 0.007060110455716438 0.0 -0.030310752106327832 0.0 0.074011989176752 0.0 0.49208886052936174 0.0 0.48555929487107646 0.0 0.17308143138790666 0.0 0.002559995970445214 0.0 -0.01184452519222572 0.0 0.030071134261693493 0.0 0.183649714423355 0.0 0.18276738811038404 0.0 0.06615888824211666 0.0 0.00039323748698674157 0.0 -0.0018747929158333082 0.0 0.004829010394278859 0.0 0.028575772013480265 0.0 0.028532613017719758 0.0 0.010390880780267956; 0.0004333347647148905 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.516397205887509 0.0 0.43307067292269685 0.0 -0.0013654681718704117 0.0 0.008616603821501376 0.0 -0.031328411414376235 0.0 0.07467790942457479 0.0 0.4907562611689066 0.0 0.4824045565288113 0.0 -0.00033332233648430964 0.0 0.0029739664199677327 0.0 -0.012132366032113734 0.0 0.030323686794181084 0.0 0.18298253101956471 0.0 0.181973013629171 0.0 -4.0767037875572176e-5 0.0 0.0004471599478056403 0.0 -0.0019138018737147415 0.0 0.004868512579625859 0.0 0.028461437628510975 0.0 0.02843285113808273 0.0; 0.0 0.0004333347647148905 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.516397205887509 0.0 0.43307067292269685 0.0 -0.0013654681718704117 0.0 0.008616603821501376 0.0 -0.031328411414376235 0.0 0.07467790942457479 0.0 0.4907562611689066 0.0 0.4824045565288113 0.0 -0.00033332233648430964 0.0 0.0029739664199677327 0.0 -0.012132366032113734 0.0 0.030323686794181084 0.0 0.18298253101956471 0.0 0.181973013629171 0.0 -4.0767037875572176e-5 0.0 0.0004471599478056403 0.0 -0.0019138018737147415 0.0 0.004868512579625859 0.0 0.028461437628510975 0.0 0.02843285113808273; 1.3285996130070735e-5 0.0 0.0004333347647148905 0.0 0.006515313173187519 0.0 0.04515745032486087 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5243765573612127 0.0 0.00016017351140041437 0.0 -0.0015208950408018636 0.0 0.00841773195732088 0.0 -0.031114293895725526 0.0 0.07645829722992689 0.0 0.49294215216830334 0.0 -3.821245599182223e-5 0.0 -0.0003064263777238654 0.0 0.00287161566544696 0.0 -0.012142509881214073 0.0 0.03138188912322576 0.0 0.18291901879706488 0.0 -1.2050889299432223e-5 0.0 -3.129062677442712e-5 0.0 0.00042946688895584913 0.0 -0.0019209724541135412 0.0 0.0050577286318238745 0.0 0.028396574580185675 0.0; 0.0 1.3285996130070735e-5 0.0 0.0004333347647148905 0.0 0.006515313173187519 0.0 0.04515745032486087 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5243765573612127 0.0 0.00016017351140041437 0.0 -0.0015208950408018636 0.0 0.00841773195732088 0.0 -0.031114293895725526 0.0 0.07645829722992689 0.0 0.49294215216830334 0.0 -3.821245599182223e-5 0.0 -0.0003064263777238654 0.0 0.00287161566544696 0.0 -0.012142509881214073 0.0 0.03138188912322576 0.0 0.18291901879706488 0.0 -1.2050889299432223e-5 0.0 -3.129062677442712e-5 0.0 0.00042946688895584913 0.0 -0.0019209724541135412 0.0 0.0050577286318238745 0.0 0.028396574580185675; 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 1.9169024154916113e-6 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.00043333476471489087 0.0 1.3285996130070735e-5 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.1442799167427881 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.6773742905115608 0.0 0.39780713174575777 0.0 0.11518423095938055 0.0 0.018164071983900038 0.0 0.0012578081697469652 0.0 -5.9765272237658416e-5 0.0 0.7078430032087618 0.0 0.4676565060730453 0.0 0.14238540254519347 0.0 0.02116073208945358 0.0 0.001455467016751142 0.0 -6.231734532845906e-6 0.0 0.26909941008026234 0.0 0.18063306507823473 0.0 0.05588431838958956 0.0 0.00816149212395341 0.0 0.0005521675387664375 0.0 8.128073206836183e-6 0.0; 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 1.9169024154916113e-6 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.00043333476471489087 0.0 1.3285996130070735e-5 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.1442799167427881 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.6773742905115608 0.0 0.39780713174575777 0.0 0.11518423095938055 0.0 0.018164071983900038 0.0 0.0012578081697469652 0.0 -5.9765272237658416e-5 0.0 0.7078430032087618 0.0 0.4676565060730453 0.0 0.14238540254519347 0.0 0.02116073208945358 0.0 0.001455467016751142 0.0 -6.231734532845906e-6 0.0 0.26909941008026234 0.0 0.18063306507823473 0.0 0.05588431838958956 0.0 0.00816149212395341 0.0 0.0005521675387664375 0.0 8.128073206836183e-6; 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486091 0.0 0.006515313173187519 0.0 0.00043333476471489087 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278817 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.5420815346290316 0.0 0.41708944453186797 0.0 0.12973180688591138 0.0 0.0217593195010167 0.0 0.0016155908514909987 0.0 0.06492288875998702 0.0 0.5360092573244564 0.0 0.4817605139258416 0.0 0.16207273805316785 0.0 0.02534384085050888 0.0 0.0018232957648178928 0.0 0.028236582218702778 0.0 0.20283618747614374 0.0 0.18500807368965694 0.0 0.0637931132905989 0.0 0.009786998983680495 0.0 0.0006840127649434629 0.0; 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486091 0.0 0.006515313173187519 0.0 0.00043333476471489087 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278817 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.5420815346290316 0.0 0.41708944453186797 0.0 0.12973180688591138 0.0 0.0217593195010167 0.0 0.0016155908514909987 0.0 0.06492288875998702 0.0 0.5360092573244564 0.0 0.4817605139258416 0.0 0.16207273805316785 0.0 0.02534384085050888 0.0 0.0018232957648178928 0.0 0.028236582218702778 0.0 0.20283618747614374 0.0 0.18500807368965694 0.0 0.0637931132905989 0.0 0.009786998983680495 0.0 0.0006840127649434629; 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 0.04515745032486089 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278817 0.0 0.04515745032486091 0.0 0.006515313173187519 0.0 0.1442799167427881 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.4609802862108336 0.0 0.14427991674278817 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5137249562884669 0.0 0.4203202244632222 0.0 0.13300999174056966 0.0 0.02265203073459893 0.0 -0.023675689486659282 0.0 0.07857307378371296 0.0 0.5039261791922759 0.0 0.4824273591014665 0.0 0.16650200132354842 0.0 0.026422653015831445 0.0 -0.009574361561992855 0.0 0.033313015555956324 0.0 0.1910523913959003 0.0 0.18489399725197467 0.0 0.06556448766713807 0.0 0.010204203908658411 0.0; 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 0.04515745032486089 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278817 0.0 0.04515745032486091 0.0 0.006515313173187519 0.0 0.1442799167427881 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.4609802862108336 0.0 0.14427991674278817 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5137249562884669 0.0 0.4203202244632222 0.0 0.13300999174056966 0.0 0.02265203073459893 0.0 -0.023675689486659282 0.0 0.07857307378371296 0.0 0.5039261791922759 0.0 0.4824273591014665 0.0 0.16650200132354842 0.0 0.026422653015831445 0.0 -0.009574361561992855 0.0 0.033313015555956324 0.0 0.1910523913959003 0.0 0.18489399725197467 0.0 0.06556448766713807 0.0 0.010204203908658411; 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.006515313173187519 0.0 0.04515745032486091 0.0 0.14427991674278817 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486089 0.0 0.020816694375305873 0.0 0.14427991674278817 0.0 0.4609802862108336 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.1442799167427881 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5072622361199977 0.0 0.42022659522679645 0.0 0.13463100006032216 0.0 0.005924415145644736 0.0 -0.029143346682778355 0.0 0.08077648320645132 0.0 0.49684933076913435 0.0 0.48199312278236306 0.0 0.1677747785293643 0.0 0.0019744400025330476 0.0 -0.01137420123389122 0.0 0.033932089372627684 0.0 0.18848507404012071 0.0 0.18468326517467298 0.0 0.06599482281144899 0.0; 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.006515313173187519 0.0 0.04515745032486091 0.0 0.14427991674278817 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486089 0.0 0.020816694375305873 0.0 0.14427991674278817 0.0 0.4609802862108336 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.1442799167427881 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5072622361199977 0.0 0.42022659522679645 0.0 0.13463100006032216 0.0 0.005924415145644736 0.0 -0.029143346682778355 0.0 0.08077648320645132 0.0 0.49684933076913435 0.0 0.48199312278236306 0.0 0.1677747785293643 0.0 0.0019744400025330476 0.0 -0.01137420123389122 0.0 0.033932089372627684 0.0 0.18848507404012071 0.0 0.18468326517467298 0.0 0.06599482281144899; 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.00043333476471489087 0.0 0.006515313173187519 0.0 0.04515745032486091 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278817 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5072926226038391 0.0 0.41364837985841574 0.0 -0.0012963054595059695 0.0 0.007612588325286346 0.0 -0.030276389848037526 0.0 0.08138347606734384 0.0 0.4954768682810262 0.0 0.4784633494491083 0.0 -0.0002662893115611886 0.0 0.0024305624362231737 0.0 -0.011707673514106317 0.0 0.034148122509294866 0.0 0.18779628249295552 0.0 0.18382143855265162 0.0; 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.00043333476471489087 0.0 0.006515313173187519 0.0 0.04515745032486091 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278817 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5072926226038391 0.0 0.41364837985841574 0.0 -0.0012963054595059695 0.0 0.007612588325286346 0.0 -0.030276389848037526 0.0 0.08138347606734384 0.0 0.4954768682810262 0.0 0.4784633494491083 0.0 -0.0002662893115611886 0.0 0.0024305624362231737 0.0 -0.011707673514106317 0.0 0.034148122509294866 0.0 0.18779628249295552 0.0 0.18382143855265162; 1.9169024154916113e-6 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 1.3285996130070735e-5 0.0 0.00043333476471489087 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.1442799167427881 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5187385785800179 0.0 0.0004011684491971276 0.0 -0.001652668091696449 0.0 0.007321081292549993 0.0 -0.029486513685580664 0.0 0.08312782021309965 0.0 0.49807343120536357 0.0 7.166967624270598e-5 0.0 -0.0003307372844727836 0.0 0.0022740779049726383 0.0 -0.011445937502548603 0.0 0.03529624901542699 0.0 0.18723570256151367 0.0; 0.0 1.9169024154916113e-6 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 1.3285996130070735e-5 0.0 0.00043333476471489087 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.1442799167427881 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5187385785800179 0.0 0.0004011684491971276 0.0 -0.001652668091696449 0.0 0.007321081292549993 0.0 -0.029486513685580664 0.0 0.08312782021309965 0.0 0.49807343120536357 0.0 7.166967624270598e-5 0.0 -0.0003307372844727836 0.0 0.0022740779049726383 0.0 -0.011445937502548603 0.0 0.03529624901542699 0.0 0.18723570256151367; 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.0004333347647148905 0.0 6.252150377482015e-5 0.0 4.158317552466647e-6 0.0 1.2749355788711452e-7 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 1.9169024154916113e-6 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.00043333476471489087 0.0 1.3285996130070735e-5 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.6720128209295935 0.0 0.3903121351437764 0.0 0.11031665601685875 0.0 0.01691921825831724 0.0 0.0013695540989692653 0.0 -3.046039156655877e-5 0.0 0.7071735468854263 0.0 0.4652283190635015 0.0 0.1402783147573625 0.0 0.0205928247946441 0.0 0.0015248999213174567 0.0 3.8227982159109975e-6 0.0; 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.0004333347647148905 0.0 6.252150377482015e-5 0.0 4.158317552466647e-6 0.0 1.2749355788711452e-7 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 1.9169024154916113e-6 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.00043333476471489087 0.0 1.3285996130070735e-5 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.6720128209295935 0.0 0.3903121351437764 0.0 0.11031665601685875 0.0 0.01691921825831724 0.0 0.0013695540989692653 0.0 -3.046039156655877e-5 0.0 0.7071735468854263 0.0 0.4652283190635015 0.0 0.1402783147573625 0.0 0.0205928247946441 0.0 0.0015248999213174567 0.0 3.8227982159109975e-6; 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.00043333476471489087 0.0 6.252150377482015e-5 0.0 4.158317552466647e-6 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486091 0.0 0.006515313173187519 0.0 0.00043333476471489087 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.539238069563836 0.0 0.41101494200502703 0.0 0.124723390972141 0.0 0.02001704136017881 0.0 0.0017288226231647978 0.0 0.06791244931532629 0.0 0.537479708583687 0.0 0.48011355087156904 0.0 0.15977978453043412 0.0 0.024489455171427983 0.0 0.001897603806151235 0.0; 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.00043333476471489087 0.0 6.252150377482015e-5 0.0 4.158317552466647e-6 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486091 0.0 0.006515313173187519 0.0 0.00043333476471489087 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.539238069563836 0.0 0.41101494200502703 0.0 0.124723390972141 0.0 0.02001704136017881 0.0 0.0017288226231647978 0.0 0.06791244931532629 0.0 0.537479708583687 0.0 0.48011355087156904 0.0 0.15977978453043412 0.0 0.024489455171427983 0.0 0.001897603806151235; 0.0004333347647148905 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.00043333476471489087 0.0 6.252150377482015e-5 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 0.04515745032486089 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278817 0.0 0.04515745032486091 0.0 0.006515313173187519 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5110304606899175 0.0 0.4143587395141377 0.0 0.12813519759671255 0.0 0.020865135776136693 0.0 -0.022811216187890566 0.0 0.08103863151131488 0.0 0.5053893213358474 0.0 0.48091752369269564 0.0 0.16430178743024867 0.0 0.025552835004940284 0.0; 0.0 0.0004333347647148905 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.00043333476471489087 0.0 6.252150377482015e-5 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 0.04515745032486089 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278817 0.0 0.04515745032486091 0.0 0.006515313173187519 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5110304606899175 0.0 0.4143587395141377 0.0 0.12813519759671255 0.0 0.020865135776136693 0.0 -0.022811216187890566 0.0 0.08103863151131488 0.0 0.5053893213358474 0.0 0.48091752369269564 0.0 0.16430178743024867 0.0 0.025552835004940284; 6.252150377482015e-5 0.0 0.00043333476471489087 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.0004333347647148905 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.006515313173187519 0.0 0.04515745032486091 0.0 0.14427991674278817 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486089 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.504697760729409 0.0 0.4142660136126187 0.0 0.12933175391375715 0.0 0.00565798926734978 0.0 -0.028313350366429093 0.0 0.08329706550336141 0.0 0.4983757907886608 0.0 0.48046130221409816 0.0 0.165334684922925 0.0; 0.0 6.252150377482015e-5 0.0 0.00043333476471489087 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.0004333347647148905 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.006515313173187519 0.0 0.04515745032486091 0.0 0.14427991674278817 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.04515745032486089 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.504697760729409 0.0 0.4142660136126187 0.0 0.12933175391375715 0.0 0.00565798926734978 0.0 -0.028313350366429093 0.0 0.08329706550336141 0.0 0.4983757907886608 0.0 0.48046130221409816 0.0 0.165334684922925; 4.158317552466647e-6 0.0 6.252150377482015e-5 0.0 0.00043333476471489087 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.00043333476471489087 0.0 0.006515313173187519 0.0 0.04515745032486091 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5046620076710169 0.0 0.40821160148750574 0.0 -0.0014349394110503458 0.0 0.007431275263081863 0.0 -0.02946705550427109 0.0 0.0838951548699248 0.0 0.4970254348167934 0.0 0.47721969033254263 0.0; 0.0 4.158317552466647e-6 0.0 6.252150377482015e-5 0.0 0.00043333476471489087 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.00043333476471489087 0.0 0.006515313173187519 0.0 0.04515745032486091 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 0.14427991674278812 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5046620076710169 0.0 0.40821160148750574 0.0 -0.0014349394110503458 0.0 0.007431275263081863 0.0 -0.02946705550427109 0.0 0.0838951548699248 0.0 0.4970254348167934 0.0 0.47721969033254263; 1.2749355788711452e-7 0.0 4.158317552466647e-6 0.0 6.252150377482015e-5 0.0 0.0004333347647148905 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 1.9169024154916113e-6 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 1.3285996130070735e-5 0.0 0.00043333476471489087 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5174934527971274 0.0 0.0004573227640591113 0.0 -0.00184134369967906 0.0 0.007195657368437009 0.0 -0.028491138645320064 0.0 0.08529281409054112 0.0 0.49953019892395445 0.0; 0.0 1.2749355788711452e-7 0.0 4.158317552466647e-6 0.0 6.252150377482015e-5 0.0 0.0004333347647148905 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 1.9169024154916113e-6 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 1.3285996130070735e-5 0.0 0.00043333476471489087 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.14427991674278812 0.0 0.21250282427502207 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5174934527971274 0.0 0.0004573227640591113 0.0 -0.00184134369967906 0.0 0.007195657368437009 0.0 -0.028491138645320064 0.0 0.08529281409054112 0.0 0.49953019892395445; 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 1.3285996130070735e-5 0.0 1.9169024154916113e-6 0.0 1.2749355788711452e-7 0.0 3.90893843426485e-9 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.0004333347647148905 0.0 6.252150377482015e-5 0.0 4.158317552466647e-6 0.0 1.2749355788711452e-7 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 1.9169024154916113e-6 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486087 0.0 0.006515313173187519 0.0 0.0004333347647148905 0.0 1.3285996130070735e-5 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.6705961296429624 0.0 0.3880313449181372 0.0 0.10852289103016163 0.0 0.016228918908643034 0.0 0.0013179433042052574 0.0 2.319318052566627e-5 0.0; 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 1.3285996130070735e-5 0.0 1.9169024154916113e-6 0.0 1.2749355788711452e-7 0.0 3.90893843426485e-9 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.0004333347647148905 0.0 6.252150377482015e-5 0.0 4.158317552466647e-6 0.0 1.2749355788711452e-7 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 1.9169024154916113e-6 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486087 0.0 0.006515313173187519 0.0 0.0004333347647148905 0.0 1.3285996130070735e-5 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 4.244930574471081e-5 0.0 0.6705961296429624 0.0 0.3880313449181372 0.0 0.10852289103016163 0.0 0.016228918908643034 0.0 0.0013179433042052574 0.0 2.319318052566627e-5; 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 1.3285996130070735e-5 0.0 1.9169024154916113e-6 0.0 1.2749355788711452e-7 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.00043333476471489087 0.0 6.252150377482015e-5 0.0 4.158317552466647e-6 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.0004333347647148905 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.5384242664847626 0.0 0.40922561320167655 0.0 0.12306605978788976 0.0 0.019236918899416634 0.0 0.0016247558891949578 0.0; 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 1.3285996130070735e-5 0.0 1.9169024154916113e-6 0.0 1.2749355788711452e-7 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.00043333476471489087 0.0 6.252150377482015e-5 0.0 4.158317552466647e-6 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 6.252150377482015e-5 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.0004333347647148905 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.0013845224503386026 0.0 0.6789552902885679 0.0 0.5384242664847626 0.0 0.40922561320167655 0.0 0.12306605978788976 0.0 0.019236918899416634 0.0 0.0016247558891949578; 1.3285996130070735e-5 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 1.3285996130070735e-5 0.0 1.9169024154916113e-6 0.0 0.0004333347647148905 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.00043333476471489087 0.0 6.252150377482015e-5 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 0.04515745032486087 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.1442799167427881 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5102724116049261 0.0 0.4125891869317379 0.0 0.12648893763987037 0.0 0.020019976114784066 0.0; 0.0 1.3285996130070735e-5 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 1.3285996130070735e-5 0.0 1.9169024154916113e-6 0.0 0.0004333347647148905 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.00043333476471489087 0.0 6.252150377482015e-5 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187524 0.0 0.0009400288421806862 0.0 0.04515745032486087 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.1442799167427881 0.0 0.04515745032486089 0.0 0.006515313173187519 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278812 0.0 0.020816694375305873 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5102724116049261 0.0 0.4125891869317379 0.0 0.12648893763987037 0.0 0.020019976114784066; 1.9169024154916113e-6 0.0 1.3285996130070735e-5 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 1.3285996130070735e-5 0.0 6.252150377482015e-5 0.0 0.00043333476471489087 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.0004333347647148905 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.1442799167427881 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486087 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5039665508436914 0.0 0.41246887335006166 0.0 0.1276169543823575 0.0; 0.0 1.9169024154916113e-6 0.0 1.3285996130070735e-5 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 1.3285996130070735e-5 0.0 6.252150377482015e-5 0.0 0.00043333476471489087 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 0.0004333347647148905 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.006515313173187519 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.1442799167427881 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.04515745032486087 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.14427991674278806 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5039665508436914 0.0 0.41246887335006166 0.0 0.1276169543823575; 1.2749355788711452e-7 0.0 1.9169024154916113e-6 0.0 1.3285996130070735e-5 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 4.158317552466647e-6 0.0 6.252150377482015e-5 0.0 0.00043333476471489087 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.0004333347647148905 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5039515815308104 0.0 0.4068063536781695 0.0; 0.0 1.2749355788711452e-7 0.0 1.9169024154916113e-6 0.0 1.3285996130070735e-5 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 4.244930574471081e-5 0.0 4.158317552466647e-6 0.0 6.252150377482015e-5 0.0 0.00043333476471489087 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 0.0013845224503386026 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187524 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 0.020816694375305873 0.0 0.0004333347647148905 0.0 0.006515313173187519 0.0 0.04515745032486089 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 0.14427991674278806 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278812 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 0.46098028621083353 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502207 0.0 0.6789552902885679 0.0 0.5039515815308104 0.0 0.4068063536781695; 3.90893843426485e-9 0.0 1.2749355788711452e-7 0.0 1.9169024154916113e-6 0.0 1.3285996130070735e-5 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 1.2749355788711452e-7 0.0 4.158317552466647e-6 0.0 6.252150377482015e-5 0.0 0.0004333347647148905 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 1.9169024154916113e-6 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 1.3285996130070735e-5 0.0 0.0004333347647148905 0.0 0.006515313173187519 0.0 0.04515745032486087 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5172216476909152 0.0; 0.0 3.90893843426485e-9 0.0 1.2749355788711452e-7 0.0 1.9169024154916113e-6 0.0 1.3285996130070735e-5 0.0 4.244930574471081e-5 0.0 6.252150377482015e-5 0.0 1.2749355788711452e-7 0.0 4.158317552466647e-6 0.0 6.252150377482015e-5 0.0 0.0004333347647148905 0.0 0.0013845224503386026 0.0 0.002039195319842277 0.0 1.9169024154916113e-6 0.0 6.252150377482015e-5 0.0 0.0009400288421806862 0.0 0.006515313173187519 0.0 0.020816694375305873 0.0 0.030659889794007515 0.0 1.3285996130070735e-5 0.0 0.0004333347647148905 0.0 0.006515313173187519 0.0 0.04515745032486087 0.0 0.14427991674278806 0.0 0.21250282427502198 0.0 4.244930574471081e-5 0.0 0.0013845224503386026 0.0 0.020816694375305873 0.0 0.14427991674278806 0.0 0.46098028621083353 0.0 0.6789552902885679 0.0 6.252150377482015e-5 0.0 0.002039195319842277 0.0 0.030659889794007515 0.0 0.21250282427502198 0.0 0.6789552902885679 0.0 0.5172216476909152], 'U', 0), x = [([-2.2, -2.2], 1), ([-2.2, -2.2], 2), ([-1.32, -2.2], 1), ([-1.32, -2.2], 2), ([-0.44, -2.2], 1), ([-0.44, -2.2], 2), ([0.44, -2.2], 1), ([0.44, -2.2], 2), ([1.32, -2.2], 1), ([1.32, -2.2], 2), ([2.2, -2.2], 1), ([2.2, -2.2], 2), ([-2.2, -1.32], 1), ([-2.2, -1.32], 2), ([-1.32, -1.32], 1), ([-1.32, -1.32], 2), ([-0.44, -1.32], 1), ([-0.44, -1.32], 2), ([0.44, -1.32], 1), ([0.44, -1.32], 2), ([1.32, -1.32], 1), ([1.32, -1.32], 2), ([2.2, -1.32], 1), ([2.2, -1.32], 2), ([-2.2, -0.44], 1), ([-2.2, -0.44], 2), ([-1.32, -0.44], 1), ([-1.32, -0.44], 2), ([-0.44, -0.44], 1), ([-0.44, -0.44], 2), ([0.44, -0.44], 1), ([0.44, -0.44], 2), ([1.32, -0.44], 1), ([1.32, -0.44], 2), ([2.2, -0.44], 1), ([2.2, -0.44], 2), ([-2.2, 0.44], 1), ([-2.2, 0.44], 2), ([-1.32, 0.44], 1), ([-1.32, 0.44], 2), ([-0.44, 0.44], 1), ([-0.44, 0.44], 2), ([0.44, 0.44], 1), ([0.44, 0.44], 2), ([1.32, 0.44], 1), ([1.32, 0.44], 2), ([2.2, 0.44], 1), ([2.2, 0.44], 2), ([-2.2, 1.32], 1), ([-2.2, 1.32], 2), ([-1.32, 1.32], 1), ([-1.32, 1.32], 2), ([-0.44, 1.32], 1), ([-0.44, 1.32], 2), ([0.44, 1.32], 1), ([0.44, 1.32], 2), ([1.32, 1.32], 1), ([1.32, 1.32], 2), ([2.2, 1.32], 1), ([2.2, 1.32], 2), ([-2.2, 2.2], 1), ([-2.2, 2.2], 2), ([-1.32, 2.2], 1), ([-1.32, 2.2], 2), ([-0.44, 2.2], 1), ([-0.44, 2.2], 2), ([0.44, 2.2], 1), ([0.44, 2.2], 2), ([1.32, 2.2], 1), ([1.32, 2.2], 2), ([2.2, 2.2], 1), ([2.2, 2.2], 2)], δ = [-20.231200000000005, 22.36080000000001, -21.066003200000008, 5.664736, -21.287481600000007, 1.2351680000000003, -21.304518400000006, 0.8944320000000003, -21.525996800000005, -3.535136, -22.36080000000001, -20.231200000000005, -3.535136, 21.525996800000005, -4.3699392, 4.829932800000001, -4.591417600000001, 0.4003648, -4.6084544, 0.059628800000000044, -4.829932800000001, -4.3699392, -5.664736000000001, -21.066003200000008, 0.8944320000000004, 21.304518400000006, 0.05962880000000004, 4.6084544, -0.16184959999999998, 0.1788864, -0.1788864, -0.16184959999999998, -0.4003648, -4.591417600000001, -1.2351680000000005, -21.287481600000007, 1.2351680000000005, 21.287481600000007, 0.4003648, 4.591417600000001, 0.1788864, 0.16184959999999998, 0.16184959999999998, -0.1788864, -0.05962880000000004, -4.6084544, -0.8944320000000004, -21.304518400000006, 5.664736000000001, 21.066003200000008, 4.829932800000001, 4.3699392, 4.6084544, -0.059628800000000044, 4.591417600000001, -0.4003648, 4.3699392, -4.829932800000001, 3.535136, -21.525996800000005, 22.36080000000001, 20.231200000000005, 21.525996800000005, 3.535136, 21.304518400000006, -0.8944320000000003, 21.287481600000007, -1.2351680000000003, 21.066003200000008, -5.664736, 20.231200000000005, -22.36080000000001]))","category":"page"},{"location":"examples/gpode/#A-GPODE-problem-2","page":"Trajectory Uncertainty","title":"A GPODE problem","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"We define a GPODEProblem with the GP as the vector field.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"h = 0.002\nu0 = [2.0; 0.0]\ntspan = (0.0, 2.0)\ngpff = GPODEFunction(fp)","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"(::GPDiffEq.PullSolversModule.GPODEFunction{false, AbstractGPs.PosteriorGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, KernelFunctions.MOInputIsotopicByFeatures{Vector{Float64}, Vector{Vector{Float64}}, Int64}, Vector{Float64}}}}, AbstractGPs.PosteriorGP{GPDiffEq.DerivativeGPModule.DerivativeGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}, AbstractGPs.ZeroMean{Float64}, GPDiffEq.DerivativeGPModule.DerivativeKernelCollection{KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, KernelFunctions.MOInputIsotopicByFeatures{Vector{Float64}, Vector{Vector{Float64}}, Int64}, Vector{Float64}}}}}) (generic function with 1 method)","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"Plot the GP","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"ug = range(-2.0, 2.0; length=6)\nug = vcat.(ug, ug')[:]\ngp_pred_mean = gpff.(ug)\nsf = maximum(norm.(gp_pred_mean))\ndug = fun.(ug)\np = quiver(\n    getindex.(ug, 1),\n    getindex.(ug, 2);\n    quiver=(getindex.(dug, 1) / sf, getindex.(dug, 2) / sf),\n)\nquiver!(\n    p,\n    getindex.(ug, 1),\n    getindex.(ug, 2);\n    quiver=(getindex.(gp_pred_mean, 1) / sf, getindex.(gp_pred_mean, 2) / sf),\n)","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"(Image: )","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"Define a GPODEProblem with the GP as the vector field.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"prob = GPODEProblem(gpff, u0, tspan)","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"GPODEProblem with uType Vector{Float64} and tType Float64. In-place: false\ntimespan: (0.0, 2.0)\nu0: 2-element Vector{Float64}:\n 2.0\n 0.0","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"Solving it with a non-PULL method uses the vector field defined by the mean of the GP.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"det_gpsol = solve(prob, Euler(); dt=h)","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"However, integrating with the PULL Euler solver returns a trajectory where each state is a multi-variate normal distribution.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"gpsol = solve(prob, PULLEuler(); dt=h)","category":"page"},{"location":"examples/gpode/#Time-series","page":"Trajectory Uncertainty","title":"Time series","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"We visualize the trajectories as time series, showing the standard deviation of each component.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"m = mean.(gpsol.u)\ns = var.(gpsol.u)\nplot(\n    gpsol.t,\n    getindex.(m, 1);\n    ribbons=sqrt.(getindex.(s, 1)),\n    label=\"u1\",\n    xlabel=\"t\",\n    ylabel=\"mean\",\n)\nplot!(gpsol.t, getindex.(m, 2); ribbons=sqrt.(getindex.(s, 2)), label=\"u2\")","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"(Image: )","category":"page"},{"location":"examples/gpode/#Phase-plot","page":"Trajectory Uncertainty","title":"Phase plot","text":"","category":"section"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"The components of each state are not independent, which we show in the phase plot by showing the ellipses of the covariance matrix for a subset of states.","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"μ_res = mean.(gpsol.u)\nell_intervall = 60\nbegin\n    p2 = deepcopy(p)\n    plot!(\n        p2,\n        getindex.(μ_res, 1),\n        getindex.(μ_res, 2);\n        linewidth=2.8,\n        label=\"PULL Euler\",\n        color=:goldenrod4,\n    )\n    plot!(p2, det_gpsol; idxs=(1, 2), linewidth=2.8, label=\"GP Mean\", linestyle=:dash)\n\n    for i in 1:ell_intervall:length(gpsol.u)\n        mv = gpsol[i]\n        covellipse!(p2, mv.μ, 2 * mv.Σ; label=\"\", color=:goldenrod4)\n    end\n    p2\nend","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"(Image: )","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"","category":"page"},{"location":"examples/gpode/","page":"Trajectory Uncertainty","title":"Trajectory Uncertainty","text":"This page was generated using Literate.jl.","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"EditURL = \"https://github.com/Crown421/GPDiffEq.jl/blob/main/examples/derivativegp/script.jl\"","category":"page"},{"location":"examples/derivativegp/#Derivative-of-a-GP","page":"Derivative of a GP","title":"Derivative of a GP","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"(Image: )","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"The derivative of a GP is also a GP, as differentiation is a linear operators. In this example, we show how to use of the DerivativeGP and how to easily generate it from a known GP.","category":"page"},{"location":"examples/derivativegp/#D-Example","page":"Derivative of a GP","title":"1D Example","text":"","category":"section"},{"location":"examples/derivativegp/#Setup","page":"Derivative of a GP","title":"Setup","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"using GPDiffEq\nusing Plots\nusing LinearAlgebra\nusing Zygote","category":"page"},{"location":"examples/derivativegp/#The-toy-model","page":"Derivative of a GP","title":"The toy model","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"We generate data for our model","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"σ_n = 3e-2\nx = collect(range(-3, 3; length=10))\ny = sin.(x) + σ_n * randn(length(x))","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"10-element Vector{Float64}:\n -0.12599815755748553\n -0.7070312985539704\n -0.9762904415837073\n -0.8931288449879329\n -0.29030516808075435\n  0.30719854088802073\n  0.8091988385288457\n  0.9507830133190848\n  0.7111971712221596\n  0.1826479035346052","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"which looks as follows","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"x_plot = collect(range(-3, 3; length=50))\n\nplot(x_plot, sin.(x_plot); label=\"true\", linewidth=2.5)\nscatter!(x, y; label=\"data\", markersize=5)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"(Image: )","category":"page"},{"location":"examples/derivativegp/#Define-a-GP","page":"Derivative of a GP","title":"Define a GP","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"We'll use a simple GP with a ZeroMean and GaussianKernel, condition it on our data","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"kernel = GaussianKernel()\nf = GP(kernel)\nfx = f(x, σ_n^2)\n\nf_post = posterior(fx, y)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"AbstractGPs.PosteriorGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.SqExponentialKernel{Distances.Euclidean}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, Vector{Float64}, Vector{Float64}}}}(AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.SqExponentialKernel{Distances.Euclidean}}(AbstractGPs.ZeroMean{Float64}(), Squared Exponential Kernel (metric = Distances.Euclidean(0.0))), (α = [3.1022541287478087, -7.892492512352781, 11.678055254630788, -15.59959707773452, 15.738157693807736, -14.063551163393125, 11.597784010128972, -7.516049443130214, 5.086608451545523, -2.0223084957691495], C = LinearAlgebra.Cholesky{Float64, Matrix{Float64}}([1.0004498987955368 0.8003773141272065 0.4109274147582345 0.13527442343644172 0.028552654979465738 0.0038641816488032754 0.0003353117715403665 1.8656075767503327e-5 6.655367228157499e-7 1.5223130876467006e-8; 0.8007374029168073 0.6002467451228027 0.7860774360298166 0.5045287013510821 0.18739357913541801 0.042437043869301076 0.005993442252878988 0.0005339982776949294 3.0207225222272073e-5 1.0889719997540142e-6; 0.4111122905071873 0.800737402916808 0.4627320221952479 0.7532454836302187 0.5447501912681774 0.21694755843305388 0.05125299553180774 0.0074308448185643515 0.0006730546137433022 3.8471936975043666e-5; 0.1353352832366127 0.4111122905071873 0.800737402916808 0.4008401941766902 0.7284671118734966 0.5632271754070077 0.23365913510519642 0.05662183999427727 0.008341514642992735 0.0007632276968352209; 0.028565500784550377 0.13533528323661262 0.41111229050718734 0.8007374029168081 0.3708790752043206 0.7123614154783097 0.5712010291281239 0.242503787177178 0.059633063470279454 0.008867504227890321; 0.0038659201394728076 0.028565500784550366 0.1353352832366127 0.41111229050718745 0.8007374029168081 0.3568392984503521 0.7029993719303738 0.5740291337269634 0.24663628796656215 0.06112098575317586; 0.00033546262790251185 0.003865920139472804 0.028565500784550366 0.1353352832366127 0.41111229050718745 0.8007374029168081 0.3509441161144569 0.6982952225737459 0.5746810106111326 0.24824985985472933; 1.866446911352057e-5 0.00033546262790251185 0.003865920139472804 0.028565500784550366 0.1353352832366127 0.41111229050718734 0.800737402916808 0.3488620260888474 0.6963366393076491 0.5746726576516153; 6.658361469857302e-7 1.8664469113520537e-5 0.00033546262790251185 0.003865920139472804 0.028565500784550366 0.13533528323661262 0.4111122905071873 0.800737402916808 0.3482835414112316 0.6956902200185071; 1.522997974471263e-8 6.658361469857302e-7 1.866446911352057e-5 0.00033546262790251185 0.0038659201394728076 0.028565500784550377 0.1353352832366127 0.4111122905071873 0.8007374029168073 0.3481716098016506], 'U', 0), x = [-3.0, -2.3333333333333335, -1.6666666666666667, -1.0, -0.3333333333333333, 0.3333333333333333, 1.0, 1.6666666666666667, 2.3333333333333335, 3.0], δ = [-0.12599815755748553, -0.7070312985539704, -0.9762904415837073, -0.8931288449879329, -0.29030516808075435, 0.30719854088802073, 0.8091988385288457, 0.9507830133190848, 0.7111971712221596, 0.1826479035346052]))","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"and plot the posterior. Note that this GP completely untrained, no hyperparameters have been defined.","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"plot(x_plot, sin.(x_plot); label=\"true\", linewidth=2.5)\nscatter!(x, y; label=\"data\", markersize=5)\nplot!(\n    x_plot,\n    mean(f_post, x_plot);\n    ribbons=sqrt.(var(f_post, x_plot)),\n    label=\"GP\",\n    linewidth=2.5,\n)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"(Image: )","category":"page"},{"location":"examples/derivativegp/#Derivative-of-a-GP-2","page":"Derivative of a GP","title":"Derivative of a GP","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"Now we can easily generate the derivate of this GP","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"df_post = differentiate(f_post)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"AbstractGPs.PosteriorGP{GPDiffEq.DerivativeGPModule.DerivativeGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.SqExponentialKernel{Distances.Euclidean}}, AbstractGPs.ZeroMean{Float64}, GPDiffEq.DerivativeGPModule.DerivativeKernelCollection{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, Vector{Float64}, Vector{Float64}}}}(GPDiffEq.DerivativeGPModule.DerivativeGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.SqExponentialKernel{Distances.Euclidean}}, AbstractGPs.ZeroMean{Float64}, GPDiffEq.DerivativeGPModule.DerivativeKernelCollection{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}(AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.SqExponentialKernel{Distances.Euclidean}}(AbstractGPs.ZeroMean{Float64}(), Squared Exponential Kernel (metric = Distances.Euclidean(0.0))), AbstractGPs.ZeroMean{Float64}(), GPDiffEq.DerivativeGPModule.DerivativeKernelCollection{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}(GPDiffEq.DerivativeGPModule.Derivative10Kernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}(Squared Exponential Kernel (metric = Distances.Euclidean(0.0))), GPDiffEq.DerivativeGPModule.Derivative01Kernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}(Squared Exponential Kernel (metric = Distances.Euclidean(0.0))), GPDiffEq.DerivativeGPModule.Derivative11Kernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}(Squared Exponential Kernel (metric = Distances.Euclidean(0.0))))), (α = [3.1022541287478087, -7.892492512352781, 11.678055254630788, -15.59959707773452, 15.738157693807736, -14.063551163393125, 11.597784010128972, -7.516049443130214, 5.086608451545523, -2.0223084957691495], C = LinearAlgebra.Cholesky{Float64, Matrix{Float64}}([1.0004498987955368 0.8003773141272065 0.4109274147582345 0.13527442343644172 0.028552654979465738 0.0038641816488032754 0.0003353117715403665 1.8656075767503327e-5 6.655367228157499e-7 1.5223130876467006e-8; 0.8007374029168073 0.6002467451228027 0.7860774360298166 0.5045287013510821 0.18739357913541801 0.042437043869301076 0.005993442252878988 0.0005339982776949294 3.0207225222272073e-5 1.0889719997540142e-6; 0.4111122905071873 0.800737402916808 0.4627320221952479 0.7532454836302187 0.5447501912681774 0.21694755843305388 0.05125299553180774 0.0074308448185643515 0.0006730546137433022 3.8471936975043666e-5; 0.1353352832366127 0.4111122905071873 0.800737402916808 0.4008401941766902 0.7284671118734966 0.5632271754070077 0.23365913510519642 0.05662183999427727 0.008341514642992735 0.0007632276968352209; 0.028565500784550377 0.13533528323661262 0.41111229050718734 0.8007374029168081 0.3708790752043206 0.7123614154783097 0.5712010291281239 0.242503787177178 0.059633063470279454 0.008867504227890321; 0.0038659201394728076 0.028565500784550366 0.1353352832366127 0.41111229050718745 0.8007374029168081 0.3568392984503521 0.7029993719303738 0.5740291337269634 0.24663628796656215 0.06112098575317586; 0.00033546262790251185 0.003865920139472804 0.028565500784550366 0.1353352832366127 0.41111229050718745 0.8007374029168081 0.3509441161144569 0.6982952225737459 0.5746810106111326 0.24824985985472933; 1.866446911352057e-5 0.00033546262790251185 0.003865920139472804 0.028565500784550366 0.1353352832366127 0.41111229050718734 0.800737402916808 0.3488620260888474 0.6963366393076491 0.5746726576516153; 6.658361469857302e-7 1.8664469113520537e-5 0.00033546262790251185 0.003865920139472804 0.028565500784550366 0.13533528323661262 0.4111122905071873 0.800737402916808 0.3482835414112316 0.6956902200185071; 1.522997974471263e-8 6.658361469857302e-7 1.866446911352057e-5 0.00033546262790251185 0.0038659201394728076 0.028565500784550377 0.1353352832366127 0.4111122905071873 0.8007374029168073 0.3481716098016506], 'U', 0), x = [-3.0, -2.3333333333333335, -1.6666666666666667, -1.0, -0.3333333333333333, 0.3333333333333333, 1.0, 1.6666666666666667, 2.3333333333333335, 3.0], δ = [-0.12599815755748553, -0.7070312985539704, -0.9762904415837073, -0.8931288449879329, -0.29030516808075435, 0.30719854088802073, 0.8091988385288457, 0.9507830133190848, 0.7111971712221596, 0.1826479035346052]))","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"and plot the new posterior. As we know, the derivative of sin is cos, so we can check the differentiated GP.","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"plot(x_plot, cos.(x_plot); label=\"true\", linewidth=2.5)\nplot!(\n    x_plot,\n    mean(df_post, x_plot);\n    ribbons=sqrt.(var(df_post, x_plot)),\n    label=\"GP\",\n    linewidth=2.5,\n)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"(Image: )","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"As we saw above, the original GP was slighly off from the true function. This is reflected and amplified in the derivative as well.","category":"page"},{"location":"examples/derivativegp/#D-Example-2","page":"Derivative of a GP","title":"2D Example","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"We can do the same for a Multi-Input-Multi-Output GP, using the KernelFunctions.jl multi-output interface.","category":"page"},{"location":"examples/derivativegp/#Setup-2","page":"Derivative of a GP","title":"Setup","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"function fun(x)\n    return [-0.1 2.0; -2.0 -0.1] * (x .^ 3)\nend\nxrange = range(-1, 1; length=4)\nx = collect.(Iterators.product(xrange, xrange))[:]\ny = fun.(x)\n# This is annoying UX, needs fix\ny = ColVecs(reduce(hcat, y))\nxMO, yMO = prepare_isotopic_multi_output_data(x, y)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"([([-1.0, -1.0], 1), ([-1.0, -1.0], 2), ([-0.3333333333333333, -1.0], 1), ([-0.3333333333333333, -1.0], 2), ([0.3333333333333333, -1.0], 1), ([0.3333333333333333, -1.0], 2), ([1.0, -1.0], 1), ([1.0, -1.0], 2), ([-1.0, -0.3333333333333333], 1), ([-1.0, -0.3333333333333333], 2), ([-0.3333333333333333, -0.3333333333333333], 1), ([-0.3333333333333333, -0.3333333333333333], 2), ([0.3333333333333333, -0.3333333333333333], 1), ([0.3333333333333333, -0.3333333333333333], 2), ([1.0, -0.3333333333333333], 1), ([1.0, -0.3333333333333333], 2), ([-1.0, 0.3333333333333333], 1), ([-1.0, 0.3333333333333333], 2), ([-0.3333333333333333, 0.3333333333333333], 1), ([-0.3333333333333333, 0.3333333333333333], 2), ([0.3333333333333333, 0.3333333333333333], 1), ([0.3333333333333333, 0.3333333333333333], 2), ([1.0, 0.3333333333333333], 1), ([1.0, 0.3333333333333333], 2), ([-1.0, 1.0], 1), ([-1.0, 1.0], 2), ([-0.3333333333333333, 1.0], 1), ([-0.3333333333333333, 1.0], 2), ([0.3333333333333333, 1.0], 1), ([0.3333333333333333, 1.0], 2), ([1.0, 1.0], 1), ([1.0, 1.0], 2)], [-1.9, 2.1, -1.9962962962962962, 0.17407407407407408, -2.0037037037037035, 0.025925925925925936, -2.1, -1.9, 0.025925925925925936, 2.0037037037037035, -0.07037037037037036, 0.07777777777777778, -0.07777777777777778, -0.07037037037037036, -0.17407407407407408, -1.9962962962962962, 0.17407407407407408, 1.9962962962962962, 0.07777777777777778, 0.07037037037037036, 0.07037037037037036, -0.07777777777777778, -0.025925925925925936, -2.0037037037037035, 2.1, 1.9, 2.0037037037037035, -0.025925925925925936, 1.9962962962962962, -0.17407407407407408, 1.9, -2.1])","category":"page"},{"location":"examples/derivativegp/#Defining-a-Multi-Output-GP","page":"Derivative of a GP","title":"Defining a Multi-Output GP","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"σ_n = 3e-2\nker = GaussianKernel()\nmker = IndependentMOKernel(ker)\n\nf = GP(mker)\nfx = f(xMO, σ_n)\nf_post = posterior(fx, yMO)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"AbstractGPs.PosteriorGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, KernelFunctions.MOInputIsotopicByFeatures{Vector{Float64}, Vector{Vector{Float64}}, Int64}, Vector{Float64}}}}(AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}(AbstractGPs.ZeroMean{Float64}(), Independent Multi-Output Kernel\n\tSquared Exponential Kernel (metric = Distances.Euclidean(0.0))), (α = [-5.892808225150216, 6.513103827797584, -3.5840992759311576, -9.350814874160163, -2.6334738556861197, 9.661693530741031, -6.51310382779758, -5.8928082251501985, 9.661693530741044, 2.6334738556861117, 6.6955638260040535, -7.400360018214981, 7.400360018214993, 6.695563826004024, 9.350814874160152, -3.584099275931168, -9.350814874160173, 3.5840992759311634, -7.4003600182150056, -6.6955638260040615, -6.69556382600404, 7.400360018215011, -9.661693530741017, -2.633473855686102, 6.513103827797605, 5.892808225150209, 2.633473855686088, -9.661693530741031, 3.584099275931183, 9.350814874160166, 5.892808225150191, -6.513103827797595], C = LinearAlgebra.Cholesky{Float64, Matrix{Float64}}([1.014889156509222 0.0 0.7889900072151692 0.0 0.4050809764499162 0.0 0.13334981694169176 0.0 0.7889900072151692 0.0 0.6317738093047882 0.0 0.32436348905351053 0.0 0.10677818609732201 0.0 0.4050809764499162 0.0 0.32436348905351053 0.0 0.1665337680692131 0.0 0.05482174868161305 0.0 0.13334981694169176 0.0 0.10677818609732201 0.0 0.05482174868161305 0.0 0.018046935245354306 0.0; 0.0 1.014889156509222 0.0 0.7889900072151692 0.0 0.4050809764499162 0.0 0.13334981694169176 0.0 0.7889900072151692 0.0 0.6317738093047882 0.0 0.32436348905351053 0.0 0.10677818609732201 0.0 0.4050809764499162 0.0 0.32436348905351053 0.0 0.1665337680692131 0.0 0.05482174868161305 0.0 0.13334981694169176 0.0 0.10677818609732201 0.0 0.05482174868161305 0.0 0.018046935245354306; 0.8007374029168081 0.0 0.638353169111431 0.0 0.7537090495760886 0.0 0.4792027866048276 0.0 0.029255211453805517 0.0 0.4735218609094165 0.0 0.603523026912453 0.0 0.38371559481644707 0.0 0.015020126381302113 0.0 0.24311422962706436 0.0 0.3098590537472211 0.0 0.19700615521853768 0.0 0.0049445202807131515 0.0 0.08003149962955057 0.0 0.10200342770237808 0.0 0.06485304485293843 0.0; 0.0 0.8007374029168081 0.0 0.638353169111431 0.0 0.7537090495760886 0.0 0.4792027866048276 0.0 0.029255211453805517 0.0 0.4735218609094165 0.0 0.603523026912453 0.0 0.38371559481644707 0.0 0.015020126381302113 0.0 0.24311422962706436 0.0 0.3098590537472211 0.0 0.19700615521853768 0.0 0.0049445202807131515 0.0 0.08003149962955057 0.0 0.10200342770237808 0.0 0.06485304485293843; 0.41111229050718745 0.0 0.8007374029168081 0.0 0.5457399299167064 0.0 0.7064545415860541 0.0 -0.022834635438786412 0.0 0.05197187078849021 0.0 0.3929768471725603 0.0 0.5656845749084011 0.0 -0.011723692741141238 0.0 0.02668324817096076 0.0 0.20176104072184708 0.0 0.2904321447306477 0.0 -0.003859357441598094 0.0 0.00878393818981833 0.0 0.0664183198184574 0.0 0.09560822547933998 0.0; 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.5457399299167064 0.0 0.7064545415860541 0.0 -0.022834635438786412 0.0 0.05197187078849021 0.0 0.3929768471725603 0.0 0.5656845749084011 0.0 -0.011723692741141238 0.0 0.02668324817096076 0.0 0.20176104072184708 0.0 0.2904321447306477 0.0 -0.003859357441598094 0.0 0.00878393818981833 0.0 0.0664183198184574 0.0 0.09560822547933998; 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.5324514027629409 0.0 0.009895369273898258 0.0 -0.03508807251487256 0.0 0.05840229114034931 0.0 0.3812376696634479 0.0 0.005080451984368475 0.0 -0.01801481710299248 0.0 0.029984736062180908 0.0 0.19573394602530644 0.0 0.001672449168148829 0.0 -0.005930351466946973 0.0 0.009870764852940715 0.0 0.06443424250750197 0.0; 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.5324514027629409 0.0 0.009895369273898258 0.0 -0.03508807251487256 0.0 0.05840229114034931 0.0 0.3812376696634479 0.0 0.005080451984368475 0.0 -0.01801481710299248 0.0 0.029984736062180908 0.0 0.19573394602530644 0.0 0.001672449168148829 0.0 -0.005930351466946973 0.0 0.009870764852940715 0.0 0.06443424250750197; 0.8007374029168081 0.0 0.6411803884299545 0.0 0.32919298780790557 0.0 0.10836802322189586 0.0 0.6371966432811077 0.0 0.45504817013829923 0.0 0.22902210410479182 0.0 0.07691094199644694 0.0 0.7538884099258905 0.0 0.5946924676608645 0.0 0.3029597669878345 0.0 0.10051184002618654 0.0 0.47968125882406926 0.0 0.3811444883597061 0.0 0.1949073904227263 0.0 0.06441878806315202 0.0; 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.32919298780790557 0.0 0.10836802322189586 0.0 0.6371966432811077 0.0 0.45504817013829923 0.0 0.22902210410479182 0.0 0.07691094199644694 0.0 0.7538884099258905 0.0 0.5946924676608645 0.0 0.3029597669878345 0.0 0.10051184002618654 0.0 0.47968125882406926 0.0 0.3811444883597061 0.0 0.1949073904227263 0.0 0.06441878806315202; 0.6411803884299545 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.32919298780790557 0.0 0.8007374029168081 0.0 0.44230963790666084 0.0 0.42377799504496516 0.0 0.2508060486284582 0.0 0.08112077982886903 0.0 0.47039567497804097 0.0 0.5470118197185491 0.0 0.33304094025599956 0.0 0.05558529003964323 0.0 0.2976472790049039 0.0 0.3492110211657883 0.0 0.21451190561079217 0.0; 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.32919298780790557 0.0 0.8007374029168081 0.0 0.44230963790666084 0.0 0.42377799504496516 0.0 0.2508060486284582 0.0 0.08112077982886903 0.0 0.47039567497804097 0.0 0.5470118197185491 0.0 0.33304094025599956 0.0 0.05558529003964323 0.0 0.2976472790049039 0.0 0.3492110211657883 0.0 0.21451190561079217; 0.32919298780790557 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.41311952226736914 0.0 0.4019533510165103 0.0 -0.03386275401160267 0.0 0.1071574419958899 0.0 0.4296049806156669 0.0 0.5199008460782375 0.0 -0.022315815490579434 0.0 0.07195199031174866 0.0 0.2722343270350894 0.0 0.3321199544764706 0.0; 0.0 0.32919298780790557 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.41311952226736914 0.0 0.4019533510165103 0.0 -0.03386275401160267 0.0 0.1071574419958899 0.0 0.4296049806156669 0.0 0.5199008460782375 0.0 -0.022315815490579434 0.0 0.07195199031174866 0.0 0.2722343270350894 0.0 0.3321199544764706; 0.10836802322189586 0.0 0.32919298780790557 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.4190872209790082 0.0 -0.0016006107088383766 0.0 -0.032794568896116726 0.0 0.10918989220569206 0.0 0.4298392443456105 0.0 -0.0019483106495607988 0.0 -0.02074252762586557 0.0 0.07364514992067908 0.0 0.2705860750398662 0.0; 0.0 0.10836802322189586 0.0 0.32919298780790557 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.4190872209790082 0.0 -0.0016006107088383766 0.0 -0.032794568896116726 0.0 0.10918989220569206 0.0 0.4298392443456105 0.0 -0.0019483106495607988 0.0 -0.02074252762586557 0.0 0.07364514992067908 0.0 0.2705860750398662; 0.41111229050718745 0.0 0.32919298780790557 0.0 0.1690133154060661 0.0 0.05563799827784281 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.3291929878079056 0.0 0.10836802322189586 0.0 0.5379990508853109 0.0 0.3404879596823185 0.0 0.15457657624560323 0.0 0.052196237857934494 0.0 0.705759352510439 0.0 0.5348989037365243 0.0 0.260691806049154 0.0 0.0865998313011726 0.0; 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.1690133154060661 0.0 0.05563799827784281 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.3291929878079056 0.0 0.10836802322189586 0.0 0.5379990508853109 0.0 0.3404879596823185 0.0 0.15457657624560323 0.0 0.052196237857934494 0.0 0.705759352510439 0.0 0.5348989037365243 0.0 0.260691806049154 0.0 0.0865998313011726; 0.32919298780790557 0.0 0.41111229050718745 0.0 0.3291929878079056 0.0 0.1690133154060661 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.3291929878079056 0.0 0.8007374029168081 0.0 0.40152932023731086 0.0 0.33367284175717443 0.0 0.16285201972111996 0.0 0.11822932516806653 0.0 0.4709783692748893 0.0 0.5013551391465453 0.0 0.27585966647214877 0.0; 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.3291929878079056 0.0 0.1690133154060661 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.3291929878079056 0.0 0.8007374029168081 0.0 0.40152932023731086 0.0 0.33367284175717443 0.0 0.16285201972111996 0.0 0.11822932516806653 0.0 0.4709783692748893 0.0 0.5013551391465453 0.0 0.27585966647214877; 0.1690133154060661 0.0 0.3291929878079056 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.3291929878079056 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.37673115407242885 0.0 0.3205856109699964 0.0 -0.022009953131252497 0.0 0.13334622519081904 0.0 0.4344021412058904 0.0 0.48401072301776465 0.0; 0.0 0.1690133154060661 0.0 0.3291929878079056 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.3291929878079056 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.37673115407242885 0.0 0.3205856109699964 0.0 -0.022009953131252497 0.0 0.13334622519081904 0.0 0.4344021412058904 0.0 0.48401072301776465; 0.05563799827784281 0.0 0.1690133154060661 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.10836802322189586 0.0 0.3291929878079056 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.39676519154119294 0.0 -0.006162753591414901 0.0 -0.017936114578073818 0.0 0.1342310245363721 0.0 0.4412849285786032 0.0; 0.0 0.05563799827784281 0.0 0.1690133154060661 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.10836802322189586 0.0 0.3291929878079056 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.39676519154119294 0.0 -0.006162753591414901 0.0 -0.017936114578073818 0.0 0.1342310245363721 0.0 0.4412849285786032; 0.1353352832366127 0.0 0.10836802322189586 0.0 0.05563799827784281 0.0 0.01831563888873418 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.1690133154060661 0.0 0.05563799827784281 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.32919298780790557 0.0 0.10836802322189586 0.0 0.5156483352917743 0.0 0.3063527358955129 0.0 0.1240755016198685 0.0 0.0341764817090061 0.0; 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.05563799827784281 0.0 0.01831563888873418 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.1690133154060661 0.0 0.05563799827784281 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.32919298780790557 0.0 0.10836802322189586 0.0 0.5156483352917743 0.0 0.3063527358955129 0.0 0.1240755016198685 0.0 0.0341764817090061; 0.10836802322189586 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.05563799827784281 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.3291929878079056 0.0 0.1690133154060661 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.32919298780790557 0.0 0.8007374029168081 0.0 0.39078933713856145 0.0 0.3091310273421473 0.0 0.13692611875683675 0.0; 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.05563799827784281 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.3291929878079056 0.0 0.1690133154060661 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.32919298780790557 0.0 0.8007374029168081 0.0 0.39078933713856145 0.0 0.3091310273421473 0.0 0.13692611875683675; 0.05563799827784281 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.1690133154060661 0.0 0.3291929878079056 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.32919298780790557 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.3682547795263878 0.0 0.3025125771536608 0.0; 0.0 0.05563799827784281 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.1690133154060661 0.0 0.3291929878079056 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.32919298780790557 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.3682547795263878 0.0 0.3025125771536608; 0.01831563888873418 0.0 0.05563799827784281 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.05563799827784281 0.0 0.1690133154060661 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.10836802322189586 0.0 0.32919298780790557 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.3930172419286605 0.0; 0.0 0.01831563888873418 0.0 0.05563799827784281 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.05563799827784281 0.0 0.1690133154060661 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.10836802322189586 0.0 0.32919298780790557 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.3930172419286605], 'U', 0), x = [([-1.0, -1.0], 1), ([-1.0, -1.0], 2), ([-0.3333333333333333, -1.0], 1), ([-0.3333333333333333, -1.0], 2), ([0.3333333333333333, -1.0], 1), ([0.3333333333333333, -1.0], 2), ([1.0, -1.0], 1), ([1.0, -1.0], 2), ([-1.0, -0.3333333333333333], 1), ([-1.0, -0.3333333333333333], 2), ([-0.3333333333333333, -0.3333333333333333], 1), ([-0.3333333333333333, -0.3333333333333333], 2), ([0.3333333333333333, -0.3333333333333333], 1), ([0.3333333333333333, -0.3333333333333333], 2), ([1.0, -0.3333333333333333], 1), ([1.0, -0.3333333333333333], 2), ([-1.0, 0.3333333333333333], 1), ([-1.0, 0.3333333333333333], 2), ([-0.3333333333333333, 0.3333333333333333], 1), ([-0.3333333333333333, 0.3333333333333333], 2), ([0.3333333333333333, 0.3333333333333333], 1), ([0.3333333333333333, 0.3333333333333333], 2), ([1.0, 0.3333333333333333], 1), ([1.0, 0.3333333333333333], 2), ([-1.0, 1.0], 1), ([-1.0, 1.0], 2), ([-0.3333333333333333, 1.0], 1), ([-0.3333333333333333, 1.0], 2), ([0.3333333333333333, 1.0], 1), ([0.3333333333333333, 1.0], 2), ([1.0, 1.0], 1), ([1.0, 1.0], 2)], δ = [-1.9, 2.1, -1.9962962962962962, 0.17407407407407408, -2.0037037037037035, 0.025925925925925936, -2.1, -1.9, 0.025925925925925936, 2.0037037037037035, -0.07037037037037036, 0.07777777777777778, -0.07777777777777778, -0.07037037037037036, -0.17407407407407408, -1.9962962962962962, 0.17407407407407408, 1.9962962962962962, 0.07777777777777778, 0.07037037037037036, 0.07037037037037036, -0.07777777777777778, -0.025925925925925936, -2.0037037037037035, 2.1, 1.9, 2.0037037037037035, -0.025925925925925936, 1.9962962962962962, -0.17407407407407408, 1.9, -2.1]))","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"which looks as follows","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"sf = maximum(norm.(y)) * 2\nquiver(\n    getindex.(xMO.x, 1),\n    getindex.(xMO.x, 2);\n    quiver=(y.X[1, :] ./ sf, y.X[2, :] ./ sf),\n    label=\"data\",\n    markersize=5,\n)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"(Image: )","category":"page"},{"location":"examples/derivativegp/#Derivative-of-a-Multi-Output-GP","page":"Derivative of a GP","title":"Derivative of a Multi-Output GP","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"As above, the derivate is obtained very easily using our provided function:","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"df_post = differentiate(f_post)","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"AbstractGPs.PosteriorGP{GPDiffEq.DerivativeGPModule.DerivativeGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}, AbstractGPs.ZeroMean{Float64}, GPDiffEq.DerivativeGPModule.DerivativeKernelCollection{KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, KernelFunctions.MOInputIsotopicByFeatures{Vector{Float64}, Vector{Vector{Float64}}, Int64}, Vector{Float64}}}}(GPDiffEq.DerivativeGPModule.DerivativeGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}, AbstractGPs.ZeroMean{Float64}, GPDiffEq.DerivativeGPModule.DerivativeKernelCollection{KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}}(AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}(AbstractGPs.ZeroMean{Float64}(), Independent Multi-Output Kernel\n\tSquared Exponential Kernel (metric = Distances.Euclidean(0.0))), AbstractGPs.ZeroMean{Float64}(), GPDiffEq.DerivativeGPModule.DerivativeKernelCollection{KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}(GPDiffEq.DerivativeGPModule.Derivative10Kernel{KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}(Independent Multi-Output Kernel\n\tSquared Exponential Kernel (metric = Distances.Euclidean(0.0))), GPDiffEq.DerivativeGPModule.Derivative01Kernel{KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}(Independent Multi-Output Kernel\n\tSquared Exponential Kernel (metric = Distances.Euclidean(0.0))), GPDiffEq.DerivativeGPModule.Derivative11Kernel{KernelFunctions.IndependentMOKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}}}(Independent Multi-Output Kernel\n\tSquared Exponential Kernel (metric = Distances.Euclidean(0.0))))), (α = [-5.892808225150216, 6.513103827797584, -3.5840992759311576, -9.350814874160163, -2.6334738556861197, 9.661693530741031, -6.51310382779758, -5.8928082251501985, 9.661693530741044, 2.6334738556861117, 6.6955638260040535, -7.400360018214981, 7.400360018214993, 6.695563826004024, 9.350814874160152, -3.584099275931168, -9.350814874160173, 3.5840992759311634, -7.4003600182150056, -6.6955638260040615, -6.69556382600404, 7.400360018215011, -9.661693530741017, -2.633473855686102, 6.513103827797605, 5.892808225150209, 2.633473855686088, -9.661693530741031, 3.584099275931183, 9.350814874160166, 5.892808225150191, -6.513103827797595], C = LinearAlgebra.Cholesky{Float64, Matrix{Float64}}([1.014889156509222 0.0 0.7889900072151692 0.0 0.4050809764499162 0.0 0.13334981694169176 0.0 0.7889900072151692 0.0 0.6317738093047882 0.0 0.32436348905351053 0.0 0.10677818609732201 0.0 0.4050809764499162 0.0 0.32436348905351053 0.0 0.1665337680692131 0.0 0.05482174868161305 0.0 0.13334981694169176 0.0 0.10677818609732201 0.0 0.05482174868161305 0.0 0.018046935245354306 0.0; 0.0 1.014889156509222 0.0 0.7889900072151692 0.0 0.4050809764499162 0.0 0.13334981694169176 0.0 0.7889900072151692 0.0 0.6317738093047882 0.0 0.32436348905351053 0.0 0.10677818609732201 0.0 0.4050809764499162 0.0 0.32436348905351053 0.0 0.1665337680692131 0.0 0.05482174868161305 0.0 0.13334981694169176 0.0 0.10677818609732201 0.0 0.05482174868161305 0.0 0.018046935245354306; 0.8007374029168081 0.0 0.638353169111431 0.0 0.7537090495760886 0.0 0.4792027866048276 0.0 0.029255211453805517 0.0 0.4735218609094165 0.0 0.603523026912453 0.0 0.38371559481644707 0.0 0.015020126381302113 0.0 0.24311422962706436 0.0 0.3098590537472211 0.0 0.19700615521853768 0.0 0.0049445202807131515 0.0 0.08003149962955057 0.0 0.10200342770237808 0.0 0.06485304485293843 0.0; 0.0 0.8007374029168081 0.0 0.638353169111431 0.0 0.7537090495760886 0.0 0.4792027866048276 0.0 0.029255211453805517 0.0 0.4735218609094165 0.0 0.603523026912453 0.0 0.38371559481644707 0.0 0.015020126381302113 0.0 0.24311422962706436 0.0 0.3098590537472211 0.0 0.19700615521853768 0.0 0.0049445202807131515 0.0 0.08003149962955057 0.0 0.10200342770237808 0.0 0.06485304485293843; 0.41111229050718745 0.0 0.8007374029168081 0.0 0.5457399299167064 0.0 0.7064545415860541 0.0 -0.022834635438786412 0.0 0.05197187078849021 0.0 0.3929768471725603 0.0 0.5656845749084011 0.0 -0.011723692741141238 0.0 0.02668324817096076 0.0 0.20176104072184708 0.0 0.2904321447306477 0.0 -0.003859357441598094 0.0 0.00878393818981833 0.0 0.0664183198184574 0.0 0.09560822547933998 0.0; 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.5457399299167064 0.0 0.7064545415860541 0.0 -0.022834635438786412 0.0 0.05197187078849021 0.0 0.3929768471725603 0.0 0.5656845749084011 0.0 -0.011723692741141238 0.0 0.02668324817096076 0.0 0.20176104072184708 0.0 0.2904321447306477 0.0 -0.003859357441598094 0.0 0.00878393818981833 0.0 0.0664183198184574 0.0 0.09560822547933998; 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.5324514027629409 0.0 0.009895369273898258 0.0 -0.03508807251487256 0.0 0.05840229114034931 0.0 0.3812376696634479 0.0 0.005080451984368475 0.0 -0.01801481710299248 0.0 0.029984736062180908 0.0 0.19573394602530644 0.0 0.001672449168148829 0.0 -0.005930351466946973 0.0 0.009870764852940715 0.0 0.06443424250750197 0.0; 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.5324514027629409 0.0 0.009895369273898258 0.0 -0.03508807251487256 0.0 0.05840229114034931 0.0 0.3812376696634479 0.0 0.005080451984368475 0.0 -0.01801481710299248 0.0 0.029984736062180908 0.0 0.19573394602530644 0.0 0.001672449168148829 0.0 -0.005930351466946973 0.0 0.009870764852940715 0.0 0.06443424250750197; 0.8007374029168081 0.0 0.6411803884299545 0.0 0.32919298780790557 0.0 0.10836802322189586 0.0 0.6371966432811077 0.0 0.45504817013829923 0.0 0.22902210410479182 0.0 0.07691094199644694 0.0 0.7538884099258905 0.0 0.5946924676608645 0.0 0.3029597669878345 0.0 0.10051184002618654 0.0 0.47968125882406926 0.0 0.3811444883597061 0.0 0.1949073904227263 0.0 0.06441878806315202 0.0; 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.32919298780790557 0.0 0.10836802322189586 0.0 0.6371966432811077 0.0 0.45504817013829923 0.0 0.22902210410479182 0.0 0.07691094199644694 0.0 0.7538884099258905 0.0 0.5946924676608645 0.0 0.3029597669878345 0.0 0.10051184002618654 0.0 0.47968125882406926 0.0 0.3811444883597061 0.0 0.1949073904227263 0.0 0.06441878806315202; 0.6411803884299545 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.32919298780790557 0.0 0.8007374029168081 0.0 0.44230963790666084 0.0 0.42377799504496516 0.0 0.2508060486284582 0.0 0.08112077982886903 0.0 0.47039567497804097 0.0 0.5470118197185491 0.0 0.33304094025599956 0.0 0.05558529003964323 0.0 0.2976472790049039 0.0 0.3492110211657883 0.0 0.21451190561079217 0.0; 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.32919298780790557 0.0 0.8007374029168081 0.0 0.44230963790666084 0.0 0.42377799504496516 0.0 0.2508060486284582 0.0 0.08112077982886903 0.0 0.47039567497804097 0.0 0.5470118197185491 0.0 0.33304094025599956 0.0 0.05558529003964323 0.0 0.2976472790049039 0.0 0.3492110211657883 0.0 0.21451190561079217; 0.32919298780790557 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.41311952226736914 0.0 0.4019533510165103 0.0 -0.03386275401160267 0.0 0.1071574419958899 0.0 0.4296049806156669 0.0 0.5199008460782375 0.0 -0.022315815490579434 0.0 0.07195199031174866 0.0 0.2722343270350894 0.0 0.3321199544764706 0.0; 0.0 0.32919298780790557 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.41311952226736914 0.0 0.4019533510165103 0.0 -0.03386275401160267 0.0 0.1071574419958899 0.0 0.4296049806156669 0.0 0.5199008460782375 0.0 -0.022315815490579434 0.0 0.07195199031174866 0.0 0.2722343270350894 0.0 0.3321199544764706; 0.10836802322189586 0.0 0.32919298780790557 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.4190872209790082 0.0 -0.0016006107088383766 0.0 -0.032794568896116726 0.0 0.10918989220569206 0.0 0.4298392443456105 0.0 -0.0019483106495607988 0.0 -0.02074252762586557 0.0 0.07364514992067908 0.0 0.2705860750398662 0.0; 0.0 0.10836802322189586 0.0 0.32919298780790557 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.4190872209790082 0.0 -0.0016006107088383766 0.0 -0.032794568896116726 0.0 0.10918989220569206 0.0 0.4298392443456105 0.0 -0.0019483106495607988 0.0 -0.02074252762586557 0.0 0.07364514992067908 0.0 0.2705860750398662; 0.41111229050718745 0.0 0.32919298780790557 0.0 0.1690133154060661 0.0 0.05563799827784281 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.3291929878079056 0.0 0.10836802322189586 0.0 0.5379990508853109 0.0 0.3404879596823185 0.0 0.15457657624560323 0.0 0.052196237857934494 0.0 0.705759352510439 0.0 0.5348989037365243 0.0 0.260691806049154 0.0 0.0865998313011726 0.0; 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.1690133154060661 0.0 0.05563799827784281 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.3291929878079056 0.0 0.10836802322189586 0.0 0.5379990508853109 0.0 0.3404879596823185 0.0 0.15457657624560323 0.0 0.052196237857934494 0.0 0.705759352510439 0.0 0.5348989037365243 0.0 0.260691806049154 0.0 0.0865998313011726; 0.32919298780790557 0.0 0.41111229050718745 0.0 0.3291929878079056 0.0 0.1690133154060661 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.3291929878079056 0.0 0.8007374029168081 0.0 0.40152932023731086 0.0 0.33367284175717443 0.0 0.16285201972111996 0.0 0.11822932516806653 0.0 0.4709783692748893 0.0 0.5013551391465453 0.0 0.27585966647214877 0.0; 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.3291929878079056 0.0 0.1690133154060661 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.3291929878079056 0.0 0.8007374029168081 0.0 0.40152932023731086 0.0 0.33367284175717443 0.0 0.16285201972111996 0.0 0.11822932516806653 0.0 0.4709783692748893 0.0 0.5013551391465453 0.0 0.27585966647214877; 0.1690133154060661 0.0 0.3291929878079056 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.3291929878079056 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.37673115407242885 0.0 0.3205856109699964 0.0 -0.022009953131252497 0.0 0.13334622519081904 0.0 0.4344021412058904 0.0 0.48401072301776465 0.0; 0.0 0.1690133154060661 0.0 0.3291929878079056 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.3291929878079056 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.37673115407242885 0.0 0.3205856109699964 0.0 -0.022009953131252497 0.0 0.13334622519081904 0.0 0.4344021412058904 0.0 0.48401072301776465; 0.05563799827784281 0.0 0.1690133154060661 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.10836802322189586 0.0 0.3291929878079056 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.39676519154119294 0.0 -0.006162753591414901 0.0 -0.017936114578073818 0.0 0.1342310245363721 0.0 0.4412849285786032 0.0; 0.0 0.05563799827784281 0.0 0.1690133154060661 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.10836802322189586 0.0 0.3291929878079056 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.39676519154119294 0.0 -0.006162753591414901 0.0 -0.017936114578073818 0.0 0.1342310245363721 0.0 0.4412849285786032; 0.1353352832366127 0.0 0.10836802322189586 0.0 0.05563799827784281 0.0 0.01831563888873418 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.1690133154060661 0.0 0.05563799827784281 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.32919298780790557 0.0 0.10836802322189586 0.0 0.5156483352917743 0.0 0.3063527358955129 0.0 0.1240755016198685 0.0 0.0341764817090061 0.0; 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.05563799827784281 0.0 0.01831563888873418 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.1690133154060661 0.0 0.05563799827784281 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.32919298780790557 0.0 0.10836802322189586 0.0 0.5156483352917743 0.0 0.3063527358955129 0.0 0.1240755016198685 0.0 0.0341764817090061; 0.10836802322189586 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.05563799827784281 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.3291929878079056 0.0 0.1690133154060661 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.32919298780790557 0.0 0.8007374029168081 0.0 0.39078933713856145 0.0 0.3091310273421473 0.0 0.13692611875683675 0.0; 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.05563799827784281 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.3291929878079056 0.0 0.1690133154060661 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.6411803884299546 0.0 0.32919298780790557 0.0 0.8007374029168081 0.0 0.39078933713856145 0.0 0.3091310273421473 0.0 0.13692611875683675; 0.05563799827784281 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.1690133154060661 0.0 0.3291929878079056 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.32919298780790557 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.3682547795263878 0.0 0.3025125771536608 0.0; 0.0 0.05563799827784281 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.10836802322189586 0.0 0.1690133154060661 0.0 0.3291929878079056 0.0 0.41111229050718745 0.0 0.32919298780790557 0.0 0.32919298780790557 0.0 0.6411803884299546 0.0 0.8007374029168081 0.0 0.6411803884299545 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.3682547795263878 0.0 0.3025125771536608; 0.01831563888873418 0.0 0.05563799827784281 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.05563799827784281 0.0 0.1690133154060661 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.10836802322189586 0.0 0.32919298780790557 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.3930172419286605 0.0; 0.0 0.01831563888873418 0.0 0.05563799827784281 0.0 0.10836802322189586 0.0 0.1353352832366127 0.0 0.05563799827784281 0.0 0.1690133154060661 0.0 0.32919298780790557 0.0 0.41111229050718745 0.0 0.10836802322189586 0.0 0.32919298780790557 0.0 0.6411803884299545 0.0 0.8007374029168081 0.0 0.1353352832366127 0.0 0.41111229050718745 0.0 0.8007374029168081 0.0 0.3930172419286605], 'U', 0), x = [([-1.0, -1.0], 1), ([-1.0, -1.0], 2), ([-0.3333333333333333, -1.0], 1), ([-0.3333333333333333, -1.0], 2), ([0.3333333333333333, -1.0], 1), ([0.3333333333333333, -1.0], 2), ([1.0, -1.0], 1), ([1.0, -1.0], 2), ([-1.0, -0.3333333333333333], 1), ([-1.0, -0.3333333333333333], 2), ([-0.3333333333333333, -0.3333333333333333], 1), ([-0.3333333333333333, -0.3333333333333333], 2), ([0.3333333333333333, -0.3333333333333333], 1), ([0.3333333333333333, -0.3333333333333333], 2), ([1.0, -0.3333333333333333], 1), ([1.0, -0.3333333333333333], 2), ([-1.0, 0.3333333333333333], 1), ([-1.0, 0.3333333333333333], 2), ([-0.3333333333333333, 0.3333333333333333], 1), ([-0.3333333333333333, 0.3333333333333333], 2), ([0.3333333333333333, 0.3333333333333333], 1), ([0.3333333333333333, 0.3333333333333333], 2), ([1.0, 0.3333333333333333], 1), ([1.0, 0.3333333333333333], 2), ([-1.0, 1.0], 1), ([-1.0, 1.0], 2), ([-0.3333333333333333, 1.0], 1), ([-0.3333333333333333, 1.0], 2), ([0.3333333333333333, 1.0], 1), ([0.3333333333333333, 1.0], 2), ([1.0, 1.0], 1), ([1.0, 1.0], 2)], δ = [-1.9, 2.1, -1.9962962962962962, 0.17407407407407408, -2.0037037037037035, 0.025925925925925936, -2.1, -1.9, 0.025925925925925936, 2.0037037037037035, -0.07037037037037036, 0.07777777777777778, -0.07777777777777778, -0.07037037037037036, -0.17407407407407408, -1.9962962962962962, 0.17407407407407408, 1.9962962962962962, 0.07777777777777778, 0.07037037037037036, 0.07037037037037036, -0.07777777777777778, -0.025925925925925936, -2.0037037037037035, 2.1, 1.9, 2.0037037037037035, -0.025925925925925936, 1.9962962962962962, -0.17407407407407408, 1.9, -2.1]))","category":"page"},{"location":"examples/derivativegp/#Visualizing-the-derivatives","page":"Derivative of a GP","title":"Visualizing the derivatives","text":"","category":"section"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"To demonstrate, we we show the contour plots for each component of our function and the corresponding (scaled) gradient separately. In the first row of the following grid we show the f_1 and in the second row f_2. The right column showing the GP also includes the location of the input data points for the GP.","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"As our GP is untrained, it smoothes the data a little too strongly, but we can see that the gradients are correctly perpendicular to the contours.","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"xprange = range(-1, 1; length=14)\nxprange2 = range(-1, 1.0; length=10)\nxp = vcat.(xprange', xprange2)\n\np = plot(; layout=(2, 2), size=(800, 800))\n\nfor comp in 1:2\n    nlevels = 30\n    narrow = 6\n\n    spl = (comp - 1) * 2\n    fungrad(xval) = only(gradient(x -> fun(x)[comp], xval))\n    gpgrad(xval) = only(mean(df_post, [(xval, comp)]))\n    zreal = getindex.(fun.(xp), comp)\n\n    contour!(\n        p,\n        xprange,\n        xprange2,\n        zreal;\n        levels=nlevels,\n        linewidth=2,\n        label=\"\",\n        subplot=spl + 1,\n        title=\"real\",\n    )\n\n    xpMO = [[(xval, comp)] for xval in xp]\n    zgp = only.(mean.(Ref(f_post), xpMO))\n    contour!(\n        p,\n        xprange,\n        xprange2,\n        zgp;\n        levels=nlevels,\n        linewidth=2,\n        label=\"\",\n        subplot=spl + 2,\n        title=\"gp\",\n    )\n\n    scatter!(\n        p,\n        getindex.(x, 1),\n        getindex.(x, 2);\n        label=\"data\",\n        markersize=3,\n        subplot=spl + 2,\n        legend=:none,\n    )\n\n    xgrange = range(-0.8, 0.8; length=narrow)\n    xg = collect.(Iterators.product(xgrange, xgrange))[:]\n    dzreal = fungrad.(xg)\n    sf = maximum(norm.(dzreal)) * 3\n\n    quiver!(\n        p,\n        getindex.(xg, 1),\n        getindex.(xg, 2);\n        quiver=(getindex.(dzreal, 1) ./ sf, getindex.(dzreal, 2) ./ sf),\n        label=\"data\",\n        linewidth=2.5,\n        subplot=spl + 1,\n    )\n\n    dzgp = gpgrad.(xg)\n    quiver!(\n        p,\n        getindex.(xg, 1),\n        getindex.(xg, 2);\n        quiver=(getindex.(dzgp, 1) ./ sf, getindex.(dzgp, 2) ./ sf),\n        label=\"data\",\n        linewidth=2.5,\n        subplot=spl + 2,\n    )\nend\np","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"(Image: )","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"","category":"page"},{"location":"examples/derivativegp/","page":"Derivative of a GP","title":"Derivative of a GP","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#GPDiffEq.jl","page":"Home","title":"GPDiffEq.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The GPDiffEq.jl package facilitates learning the (nonlinear) vector field of unknown system using Gaussian Processes (GPs). ","category":"page"},{"location":"","page":"Home","title":"Home","text":"It bridges the Universal Differential Equations in the SciML community using Neural Networks and GP ecosystem by the JuliaGaussianProcesses organization.","category":"page"},{"location":"","page":"Home","title":"Home","text":"For the GP machinery, this package builds on ","category":"page"},{"location":"","page":"Home","title":"Home","text":"KernelFunctions.jl\nApproximateGPs.jl\nInducingPoints.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It further uses Flux.jl for training, and DifferentialEquations.jl for solvers. ","category":"page"},{"location":"symmetries/#Symmetries","page":"Symmetries","title":"Symmetries","text":"","category":"section"},{"location":"symmetries/","page":"Symmetries","title":"Symmetries","text":"In addition to the kernels from KernelFunctions, we implement Group-Integration-Matrix (GIM) Kernels. ","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"EditURL = \"https://github.com/Crown421/GPDiffEq.jl/blob/main/examples/spiral/script.jl\"","category":"page"},{"location":"examples/spiral/#Spiral-ODE","page":"Spiral ODE","title":"Spiral ODE","text":"","category":"section"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"(Image: )","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"You are seeing the HTML output generated by Documenter.jl and Literate.jl from the Julia source file. The corresponding notebook can be viewed in nbviewer.","category":"page"},{"location":"examples/spiral/#Setup","page":"Spiral ODE","title":"Setup","text":"","category":"section"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"Load necessary packages","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"using Plots\nusing LinearAlgebra\nusing GPDiffEq\nusing Optimization, OptimizationOptimJL\nusing Zygote","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"First we define an ODE and generate some data points from it.","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"u0 = [2.0; 0.0]\ndatasize = 19\ntspan = (0.0, 3.0)\ndatatspan = (0.0, 1.5)\ndatatsteps = range(datatspan[1], datatspan[2]; length=datasize)\n\nfunction trueODEfunc(u, p, t)\n    du = similar(u)\n    true_A = [-0.1 2.0; -2.0 -0.1]\n    return du .= ((u .^ 3)'true_A)'\nend\n\nprob_trueode = ODEProblem(trueODEfunc, u0, tspan)\nsol = solve(prob_trueode, Tsit5())\node_data = Array(sol(datatsteps))\n\ntraj = sol(datatsteps);\n\np = plot(sol)\nscatter!(p, datatsteps, ode_data'; markersize=4, color=:black, label=[\"data\" \"\"])","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"(Image: )","category":"page"},{"location":"examples/spiral/#Gradient-data","page":"Spiral ODE","title":"Gradient data","text":"","category":"section"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"For this example we get gradient observations from our trajectory data by interpolating it with a GP and differentiating it.","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"First, we set all necessary variables, which includes the Multi-Output Kernel and the inputs and outputs. See also the KernelFunctions.jl Documentation on Multiple Outputs.","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"scaker = with_lengthscale(SqExponentialKernel(), 1.0)\nmoker = IndependentMOKernel(scaker)\n\nx, y = prepare_isotopic_multi_output_data(collect(datatsteps), ColVecs(ode_data))\nσ_n = 1e-3","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"We define a finite GP","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"g = GP(moker)\ngt = g(x, σ_n)\ngt_post = posterior(gt, y)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"Now we use the following convenience functions to a loglikelihood loss function and a function to rebuild the gp with the optimal parameters. Note that we use optimize over the logarithm of the parameters, to ensure their positivity. For more details see this KernelFunctions.jl example","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"loss, buildgppost = gp_negloglikelihood(gt, x, y)\n\np0 = log.([1.0])\nunfl(x) = exp.(x)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"Optimizing:","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"adtype = Optimization.AutoZygote()\n\noptf = Optimization.OptimizationFunction((x, p) -> (loss ∘ unfl)(x), adtype)\noptprob = Optimization.OptimizationProblem(optf, p0)\n\noptp = Optimization.solve(optprob, NelderMead(); maxiters=300)\n\noptparams = unfl(optp)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"1-element Vector{Float64}:\n 5.305029832442984","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"Now we can build a FiniteGP with the optimized parameters,","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"optpost = buildgppost(optparams)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"which fits the data much better than the initial GP:","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"t_plot = range(datatspan...; length=100)\nt_plot_mo = MOInput(t_plot, 2)\nopt_pred_mean = mean(optpost, t_plot_mo)\nopt_pred_mean = reshape(opt_pred_mean, :, 2)\npred_mean = mean(gt_post, t_plot_mo)\npred_mean = reshape(pred_mean, :, 2)\nplot(sol; label=[\"ode\" \"\"], color=[:skyblue :navy], linewidth=3.5)\nplot!(\n    t_plot,\n    pred_mean;\n    label=[\"gp\" \"\"],\n    color=[:limegreen :darkgreen],\n    linewidth=2.5,\n    linestyle=:dashdot,\n)\nplot!(\n    t_plot,\n    opt_pred_mean;\n    label=[\"opt. gp\" \"\"],\n    color=[:tomato :firebrick],\n    linewidth=2.5,\n    linestyle=:dash,\n)\nscatter!(datatsteps, ode_data'; markersize=4, color=:black, label=[\"data\" \"\"])","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"(Image: )","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"GPs are closed under linear operators, which means that we can very easily obtain derivative information along the trajectory.","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"deriv_post = differentiate(optpost)\ndu_pred_mean = mean(deriv_post, x)\ndu_pred_mean = reshape_isotopic_multi_output(du_pred_mean, deriv_post)\n\ndu = trueODEfunc.(eachcol(ode_data), 0, 0)\nsf = maximum(norm.(du))\nquiver(\n    ode_data[1, :],\n    ode_data[2, :];\n    quiver=(getindex.(du, 1) / sf, getindex.(du, 2) / sf),\n    label=\"true gradients\",\n)\nquiver!(\n    ode_data[1, :],\n    ode_data[2, :];\n    quiver=(getindex.(du_pred_mean, 1) / sf, getindex.(du_pred_mean, 2) / sf),\n    label=\"predicted gradients\",\n)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"(Image: )","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"This leaves us with u and udot pairs as in the input and output for the next GP that will define the ODE.","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"u = ColVecs(ode_data)\nudot = du_pred_mean","category":"page"},{"location":"examples/spiral/#Building-a-model","page":"Spiral ODE","title":"Building a model","text":"","category":"section"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"Now we build a model for the the ODE.","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"scaker = with_lengthscale(SqExponentialKernel(), ones(2))\nmoker = IndependentMOKernel(scaker)\n\nu_mo, y = prepare_isotopic_multi_output_data(u, udot)\nσ_n = 1e-4","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"compute the posterior GP","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"gpfun = GP(moker)\nfin_gpfun = gpfun(u_mo, σ_n)\npost_gpfun = posterior(fin_gpfun, y)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"AbstractGPs.PosteriorGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.TransformedKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}, KernelFunctions.ARDTransform{Vector{Float64}}}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, KernelFunctions.MOInputIsotopicByFeatures{SubArray{Float64, 1, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}, KernelFunctions.ColVecs{Float64, Matrix{Float64}, SubArray{Float64, 1, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}}, Int64}, Vector{Float64}}}}(AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.TransformedKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}, KernelFunctions.ARDTransform{Vector{Float64}}}}}(AbstractGPs.ZeroMean{Float64}(), Independent Multi-Output Kernel\n\tSquared Exponential Kernel (metric = Distances.Euclidean(0.0))\n\t- ARD Transform (dims: 2)), (α = [26.299072516798237, 37.958642543535255, -16.77147388720557, 6.9039427734896375, -33.9184364272329, 8.339421352506076, -8.107379122378676, -0.6857713934549655, -5.388345452076144, 2.404603905483877, -0.5462985856278377, -3.9054462168389876, 3.2481706823012666, -6.50325235120365, 0.5860650926322835, 1.356343268981209, -8.705627891387897, -11.671173028608033, 11.723993459073037, 8.809514126903059, 0.06153812535462716, -7.299220232625666, 2.684048812729418, 16.12574463789271, -4.294326147387075, -22.400209312051032, 20.106070254427642, 22.392012403829927, 11.108447426226995, -15.851093717998873, -98.71004317303651, 29.4780322640062, 154.84664378578213, -91.06618145674325, -206.26499193607822, 75.26537196985917, 144.15454513648888, -42.703051167574664], C = LinearAlgebra.Cholesky{Float64, Matrix{Float64}}([1.0000499987500624 0.0 0.4619606778188927 0.0 0.12269562472437252 0.0 0.026218429224843662 0.0 0.0027021624117434797 0.0 0.0006429232411829657 0.0 0.0008873792232310664 0.0 0.0010990572662038834 0.0 0.0009882486063107268 0.0 0.0021679723326851145 0.0 0.011652074801966224 0.0 0.05059113039230501 0.0 0.14142544228977091 0.0 0.30471924660177796 0.0 0.5611988893969765 0.0 0.7965186761621638 0.0 0.8464824686465033 0.0 0.7056264528780858 0.0 0.4762698637032939 0.0; 0.0 1.0000499987500624 0.0 0.4619606778188927 0.0 0.12269562472437252 0.0 0.026218429224843662 0.0 0.0027021624117434797 0.0 0.0006429232411829657 0.0 0.0008873792232310664 0.0 0.0010990572662038834 0.0 0.0009882486063107268 0.0 0.0021679723326851145 0.0 0.011652074801966224 0.0 0.05059113039230501 0.0 0.14142544228977091 0.0 0.30471924660177796 0.0 0.5611988893969765 0.0 0.7965186761621638 0.0 0.8464824686465033 0.0 0.7056264528780858 0.0 0.4762698637032939; 0.4619837752753616 0.0 0.8869567814437799 0.0 0.6412430398763515 0.0 0.1631244352726156 0.0 0.017496623874165746 0.0 0.0025174985957944164 0.0 0.0010055793192125656 0.0 8.799048084102786e-5 0.0 -0.00027727159662348276 0.0 -0.0008455426756255377 0.0 -0.004823282243078161 0.0 -0.02125900310773853 0.0 -0.0598178450420097 0.0 -0.12361141746266345 0.0 -0.18878065972837538 0.0 -0.13989315727281265 0.0 0.10412553451032715 0.0 0.4525716703809803 0.0 0.6848218415387698 0.0; 0.0 0.4619837752753616 0.0 0.8869567814437799 0.0 0.6412430398763515 0.0 0.1631244352726156 0.0 0.017496623874165746 0.0 0.0025174985957944164 0.0 0.0010055793192125656 0.0 8.799048084102786e-5 0.0 -0.00027727159662348276 0.0 -0.0008455426756255377 0.0 -0.004823282243078161 0.0 -0.02125900310773853 0.0 -0.0598178450420097 0.0 -0.12361141746266345 0.0 -0.18878065972837538 0.0 -0.13989315727281265 0.0 0.10412553451032715 0.0 0.4525716703809803 0.0 0.6848218415387698; 0.12270175935224686 0.0 0.6254354167350377 0.0 0.7575309548022654 0.0 0.6027681044254901 0.0 0.14415483657412623 0.0 0.027726007191191854 0.0 0.009277249202049812 0.0 0.0024895172993879304 0.0 0.0006588141720958554 0.0 0.0007580808186849411 0.0 0.0032063003716316235 0.0 0.012376965420441147 0.0 0.032300169350494144 0.0 0.06430671634799454 0.0 0.09759303562741692 0.0 0.09096366680667207 0.0 0.05225245325011212 0.0 0.07331608185482877 0.0 0.24656641134415097 0.0; 0.0 0.12270175935224686 0.0 0.6254354167350377 0.0 0.7575309548022654 0.0 0.6027681044254901 0.0 0.14415483657412623 0.0 0.027726007191191854 0.0 0.009277249202049812 0.0 0.0024895172993879304 0.0 0.0006588141720958554 0.0 0.0007580808186849411 0.0 0.0032063003716316235 0.0 0.012376965420441147 0.0 0.032300169350494144 0.0 0.06430671634799454 0.0 0.09759303562741692 0.0 0.09096366680667207 0.0 0.05225245325011212 0.0 0.07331608185482877 0.0 0.24656641134415097; 0.026219740113533504 0.0 0.1567962074202888 0.0 0.5644347929751523 0.0 0.7806879177195415 0.0 0.6705693052425005 0.0 0.2722313602452271 0.0 0.10608536365918658 0.0 0.027031737357260516 0.0 0.0050074749266966565 0.0 0.0019235489029438065 0.0 0.0012626266942816092 0.0 -0.002825667281312513 0.0 -0.013472579685925714 0.0 -0.02966708575212247 0.0 -0.04379739668260767 0.0 -0.03009077526473488 0.0 0.01510010613412035 0.0 0.050685913552187836 0.0 0.05225727916312493 0.0; 0.0 0.026219740113533504 0.0 0.1567962074202888 0.0 0.5644347929751523 0.0 0.7806879177195415 0.0 0.6705693052425005 0.0 0.2722313602452271 0.0 0.10608536365918658 0.0 0.027031737357260516 0.0 0.0050074749266966565 0.0 0.0019235489029438065 0.0 0.0012626266942816092 0.0 -0.002825667281312513 0.0 -0.013472579685925714 0.0 -0.02966708575212247 0.0 -0.04379739668260767 0.0 -0.03009077526473488 0.0 0.01510010613412035 0.0 0.050685913552187836 0.0 0.05225727916312493; 0.0027022975164865326 0.0 0.0167670419768682 0.0 0.12075288277522114 0.0 0.6133222655245567 0.0 0.727559452161941 0.0 0.7539912997436676 0.0 0.3676121836397612 0.0 0.09802596724534325 0.0 0.017626445403528784 0.0 0.0049468055443449965 0.0 0.003058600725246441 0.0 0.0037030403665224503 0.0 0.008586154840786505 0.0 0.01763992428488551 0.0 0.025791872918990516 0.0 0.017488618066670566 0.0 -0.009668456532850792 0.0 -0.0318415023820676 0.0 -0.03314009053855562 0.0; 0.0 0.0027022975164865326 0.0 0.0167670419768682 0.0 0.12075288277522114 0.0 0.6133222655245567 0.0 0.727559452161941 0.0 0.7539912997436676 0.0 0.3676121836397612 0.0 0.09802596724534325 0.0 0.017626445403528784 0.0 0.0049468055443449965 0.0 0.003058600725246441 0.0 0.0037030403665224503 0.0 0.008586154840786505 0.0 0.01763992428488551 0.0 0.025791872918990516 0.0 0.017488618066670566 0.0 -0.009668456532850792 0.0 -0.0318415023820676 0.0 -0.03314009053855562; 0.0006429553865414109 0.0 0.0025299177080974535 0.0 0.022696521021576464 0.0 0.2296676085399615 0.0 0.735166114125785 0.0 0.5972534836948615 0.0 0.6828950347841651 0.0 0.30705463939705857 0.0 0.0790940651476709 0.0 0.022746657444985094 0.0 0.009796080429416248 0.0 0.002386016320785648 0.0 -0.0039508617736485445 0.0 -0.010492708491930207 0.0 -0.015485097032190833 0.0 -0.00922712046183851 0.0 0.009629844241618089 0.0 0.025192617746194794 0.0 0.027411718075469153 0.0; 0.0 0.0006429553865414109 0.0 0.0025299177080974535 0.0 0.022696521021576464 0.0 0.2296676085399615 0.0 0.735166114125785 0.0 0.5972534836948615 0.0 0.6828950347841651 0.0 0.30705463939705857 0.0 0.0790940651476709 0.0 0.022746657444985094 0.0 0.009796080429416248 0.0 0.002386016320785648 0.0 -0.0039508617736485445 0.0 -0.010492708491930207 0.0 -0.015485097032190833 0.0 -0.00922712046183851 0.0 0.009629844241618089 0.0 0.025192617746194794 0.0 0.027411718075469153; 0.0008874235910830593 0.0 0.0013018397039014306 0.0 0.007781501733617772 0.0 0.0885988918193414 0.0 0.339954659970823 0.0 0.7141779126573086 0.0 0.6223131715941971 0.0 0.751607244950626 0.0 0.3832377988274615 0.0 0.16233559103943518 0.0 0.07876507058636567 0.0 0.032033877763256474 0.0 0.012149869856676675 0.0 0.00938280154801046 0.0 0.011565341017725144 0.0 0.00971415602006578 0.0 0.000898582222186281 0.0 -0.007763626223691651 0.0 -0.009306905542729317 0.0; 0.0 0.0008874235910830593 0.0 0.0013018397039014306 0.0 0.007781501733617772 0.0 0.0885988918193414 0.0 0.339954659970823 0.0 0.7141779126573086 0.0 0.6223131715941971 0.0 0.751607244950626 0.0 0.3832377988274615 0.0 0.16233559103943518 0.0 0.07876507058636567 0.0 0.032033877763256474 0.0 0.012149869856676675 0.0 0.00938280154801046 0.0 0.011565341017725144 0.0 0.00971415602006578 0.0 0.000898582222186281 0.0 -0.007763626223691651 0.0 -0.009306905542729317; 0.0010991122176934405 0.0 0.0005857649933417739 0.0 0.0020771592181015254 0.0 0.022647121325912355 0.0 0.08980975769284483 0.0 0.2647290186469852 0.0 0.7163485482448093 0.0 0.5749406746073474 0.0 0.7782548946850978 0.0 0.5405279503578747 0.0 0.2965348985754925 0.0 0.11847318760327925 0.0 0.03375044613998764 0.0 0.007737726030787262 0.0 0.0011651634349340585 0.0 0.0015822554964148895 0.0 0.005387135837008778 0.0 0.00824933211472081 0.0 0.007698477750692672 0.0; 0.0 0.0010991122176934405 0.0 0.0005857649933417739 0.0 0.0020771592181015254 0.0 0.022647121325912355 0.0 0.08980975769284483 0.0 0.2647290186469852 0.0 0.7163485482448093 0.0 0.5749406746073474 0.0 0.7782548946850978 0.0 0.5405279503578747 0.0 0.2965348985754925 0.0 0.11847318760327925 0.0 0.03375044613998764 0.0 0.007737726030787262 0.0 0.0011651634349340585 0.0 0.0015822554964148895 0.0 0.005387135837008778 0.0 0.00824933211472081 0.0 0.007698477750692672; 0.0009882980175057931 0.0 0.00021060407309793713 0.0 0.0004425274274691109 0.0 0.00428706789676326 0.0 0.0162749362846795 0.0 0.061910787763005834 0.0 0.29952450043249695 0.0 0.761646811937385 0.0 0.4908716567223258 0.0 0.7147416727873102 0.0 0.49644834597739185 0.0 0.2199572240199155 0.0 0.07126399981696134 0.0 0.02356825634748826 0.0 0.012481598801260234 0.0 0.0062768031194057675 0.0 -0.0007317513623357311 0.0 -0.00509089801443934 0.0 -0.005310601362392437 0.0; 0.0 0.0009882980175057931 0.0 0.00021060407309793713 0.0 0.0004425274274691109 0.0 0.00428706789676326 0.0 0.0162749362846795 0.0 0.061910787763005834 0.0 0.29952450043249695 0.0 0.761646811937385 0.0 0.4908716567223258 0.0 0.7147416727873102 0.0 0.49644834597739185 0.0 0.2199572240199155 0.0 0.07126399981696134 0.0 0.02356825634748826 0.0 0.012481598801260234 0.0 0.0062768031194057675 0.0 -0.0007317513623357311 0.0 -0.00509089801443934 0.0 -0.005310601362392437; 0.0021680807285919183 0.0 0.0002515581581536325 0.0 0.00029807205047633814 0.0 0.0018775504834565662 0.0 0.004989313070951913 0.0 0.017859302819268195 0.0 0.11858782878061566 0.0 0.4403096853090712 0.0 0.8356269154126085 0.0 0.4125160128547928 0.0 0.6897705931409227 0.0 0.5119931530472274 0.0 0.23614979518953888 0.0 0.08873535729054012 0.0 0.04011368242504331 0.0 0.021622059792209294 0.0 0.012024302338854518 0.0 0.007402707413682703 0.0 0.005289723490878414 0.0; 0.0 0.0021680807285919183 0.0 0.0002515581581536325 0.0 0.00029807205047633814 0.0 0.0018775504834565662 0.0 0.004989313070951913 0.0 0.017859302819268195 0.0 0.11858782878061566 0.0 0.4403096853090712 0.0 0.8356269154126085 0.0 0.4125160128547928 0.0 0.6897705931409227 0.0 0.5119931530472274 0.0 0.23614979518953888 0.0 0.08873535729054012 0.0 0.04011368242504331 0.0 0.021622059792209294 0.0 0.012024302338854518 0.0 0.007402707413682703 0.0 0.005289723490878414; 0.011652657391141956 0.0 0.0011047574791972158 0.0 0.0007656342113342606 0.0 0.002437076908498332 0.0 0.003481290922590202 0.0 0.00858487477230071 0.0 0.056999795940332054 0.0 0.2330526215996194 0.0 0.5055079221201765 0.0 0.8127176687614674 0.0 0.42830183104847147 0.0 0.7254066010645787 0.0 0.5752016710311346 0.0 0.31816719895150697 0.0 0.17475747635220784 0.0 0.09260130503431839 0.0 0.03721924560621594 0.0 0.009719488886068538 0.0 0.0027340415371307435 0.0; 0.0 0.011652657391141956 0.0 0.0011047574791972158 0.0 0.0007656342113342606 0.0 0.002437076908498332 0.0 0.003481290922590202 0.0 0.00858487477230071 0.0 0.056999795940332054 0.0 0.2330526215996194 0.0 0.5055079221201765 0.0 0.8127176687614674 0.0 0.42830183104847147 0.0 0.7254066010645787 0.0 0.5752016710311346 0.0 0.31816719895150697 0.0 0.17475747635220784 0.0 0.09260130503431839 0.0 0.03721924560621594 0.0 0.009719488886068538 0.0 0.0027340415371307435; 0.05059365988558887 0.0 0.004515295914510126 0.0 0.0019510570039504016 0.0 0.0031130327741899053 0.0 0.002348320371789613 0.0 0.00377005206641491 0.0 0.02276436367850533 0.0 0.09329574244216791 0.0 0.21275358486896354 0.0 0.43786047120193267 0.0 0.8114656277590476 0.0 0.38093705716661985 0.0 0.6983584817592635 0.0 0.6273141596675497 0.0 0.41879293170499493 0.0 0.220786791744375 0.0 0.0819526015994578 0.0 0.020545474651237888 0.0 0.008460799394714015 0.0; 0.0 0.05059365988558887 0.0 0.004515295914510126 0.0 0.0019510570039504016 0.0 0.0031130327741899053 0.0 0.002348320371789613 0.0 0.00377005206641491 0.0 0.02276436367850533 0.0 0.09329574244216791 0.0 0.21275358486896354 0.0 0.43786047120193267 0.0 0.8114656277590476 0.0 0.38093705716661985 0.0 0.6983584817592635 0.0 0.6273141596675497 0.0 0.41879293170499493 0.0 0.220786791744375 0.0 0.0819526015994578 0.0 0.020545474651237888 0.0 0.008460799394714015; 0.14143251338511242 0.0 0.012277149869655567 0.0 0.003462884328427997 0.0 0.0029018324282676393 0.0 0.0012044095249183207 0.0 0.0012824504869192585 0.0 0.006955134902866922 0.0 0.028031366031283016 0.0 0.06585323610198347 0.0 0.1688746992654137 0.0 0.45760370858774474 0.0 0.8331423100933446 0.0 0.30742966705937064 0.0 0.5779498186921792 0.0 0.4971133929621247 0.0 0.24251330226734627 0.0 0.04969784531264056 0.0 -0.017402738670475634 0.0 -0.013026852002936828 0.0; 0.0 0.14143251338511242 0.0 0.012277149869655567 0.0 0.003462884328427997 0.0 0.0029018324282676393 0.0 0.0012044095249183207 0.0 0.0012824504869192585 0.0 0.006955134902866922 0.0 0.028031366031283016 0.0 0.06585323610198347 0.0 0.1688746992654137 0.0 0.45760370858774474 0.0 0.8331423100933446 0.0 0.30742966705937064 0.0 0.5779498186921792 0.0 0.4971133929621247 0.0 0.24251330226734627 0.0 0.04969784531264056 0.0 -0.017402738670475634 0.0 -0.013026852002936828; 0.30473448218322796 0.0 0.03113032472223224 0.0 0.0068370854654570086 0.0 0.0034265194479086605 0.0 0.0008709991696882242 0.0 0.0006249196256247071 0.0 0.00275371984034909 0.0 0.00969041795003705 0.0 0.02089699589581873 0.0 0.05976100303394801 0.0 0.21647931710552096 0.0 0.5405649639989585 0.0 0.8749478923703919 0.0 0.22174962136252974 0.0 0.380762805654967 0.0 0.25520874809620814 0.0 0.06008461183970742 0.0 -0.025274918094091048 0.0 -0.01452303823392067 0.0; 0.0 0.30473448218322796 0.0 0.03113032472223224 0.0 0.0068370854654570086 0.0 0.0034265194479086605 0.0 0.0008709991696882242 0.0 0.0006249196256247071 0.0 0.00275371984034909 0.0 0.00969041795003705 0.0 0.02089699589581873 0.0 0.05976100303394801 0.0 0.21647931710552096 0.0 0.5405649639989585 0.0 0.8749478923703919 0.0 0.22174962136252974 0.0 0.380762805654967 0.0 0.25520874809620814 0.0 0.06008461183970742 0.0 -0.025274918094091048 0.0 -0.01452303823392067; 0.5612269486399827 0.0 0.09181153298552383 0.0 0.021732109675988178 0.0 0.008552885526718138 0.0 0.0016778655143843278 0.0 0.000866712733834204 0.0 0.0026712693615452416 0.0 0.006795214997853412 0.0 0.011147701673635373 0.0 0.029117300939923152 0.0 0.11760559168448548 0.0 0.343891043784311 0.0 0.6510431833702492 0.0 0.8965648623530087 0.0 0.1929774603148551 0.0 0.33931801490190844 0.0 0.2588354576058842 0.0 0.12361440578492876 0.0 0.0670522785006979 0.0; 0.0 0.5612269486399827 0.0 0.09181153298552383 0.0 0.021732109675988178 0.0 0.008552885526718138 0.0 0.0016778655143843278 0.0 0.000866712733834204 0.0 0.0026712693615452416 0.0 0.006795214997853412 0.0 0.011147701673635373 0.0 0.029117300939923152 0.0 0.11760559168448548 0.0 0.343891043784311 0.0 0.6510431833702492 0.0 0.8965648623530087 0.0 0.1929774603148551 0.0 0.33931801490190844 0.0 0.2588354576058842 0.0 0.12361440578492876 0.0 0.0670522785006979; 0.7965585011003732 0.0 0.24388112301457784 0.0 0.07693163651720138 0.0 0.02940196858725014 0.0 0.005363576510479016 0.0 0.0021656621673164875 0.0 0.004390963796634047 0.0 0.007368201702285487 0.0 0.00834898252693415 0.0 0.017570764700506045 0.0 0.06909861208140865 0.0 0.20875347529168442 0.0 0.4122795910350319 0.0 0.6340428625505045 0.0 0.8771217165330067 0.0 0.19877262592299647 0.0 0.40494312449124215 0.0 0.4008501822154098 0.0 0.27869125129297356 0.0; 0.0 0.7965585011003732 0.0 0.24388112301457784 0.0 0.07693163651720138 0.0 0.02940196858725014 0.0 0.005363576510479016 0.0 0.0021656621673164875 0.0 0.004390963796634047 0.0 0.007368201702285487 0.0 0.00834898252693415 0.0 0.017570764700506045 0.0 0.06909861208140865 0.0 0.20875347529168442 0.0 0.4122795910350319 0.0 0.6340428625505045 0.0 0.8771217165330067 0.0 0.19877262592299647 0.0 0.40494312449124215 0.0 0.4008501822154098 0.0 0.27869125129297356; 0.8465247917118853 0.0 0.4833964639331413 0.0 0.2102123203882821 0.0 0.08246344232107777 0.0 0.014732913022019794 0.0 0.004827359379597748 0.0 0.0065236466728673965 0.0 0.007259553221483359 0.0 0.005686684635727396 0.0 0.0094819575918538 0.0 0.035152470956945785 0.0 0.10608242512310974 0.0 0.21174844072315321 0.0 0.35410742994908395 0.0 0.5982760234934833 0.0 0.8812323043474065 0.0 0.1557226527263429 0.0 0.31666928255995397 0.0 0.32773220821971377 0.0; 0.0 0.8465247917118853 0.0 0.4833964639331413 0.0 0.2102123203882821 0.0 0.08246344232107777 0.0 0.014732913022019794 0.0 0.004827359379597748 0.0 0.0065236466728673965 0.0 0.007259553221483359 0.0 0.005686684635727396 0.0 0.0094819575918538 0.0 0.035152470956945785 0.0 0.10608242512310974 0.0 0.21174844072315321 0.0 0.35410742994908395 0.0 0.5982760234934833 0.0 0.8812323043474065 0.0 0.1557226527263429 0.0 0.31666928255995397 0.0 0.32773220821971377; 0.7056617333187406 0.0 0.727383186592251 0.0 0.43232491362478714 0.0 0.17608839135755272 0.0 0.031215893175657875 0.0 0.008462232540611939 0.0 0.007805642592021827 0.0 0.0058898907783707 0.0 0.0032510837786969655 0.0 0.0043294605521709524 0.0 0.015063989711050139 0.0 0.04505972143073156 0.0 0.09019209062421171 0.0 0.1623060894233369 0.0 0.330319862936455 0.0 0.6195413820218004 0.0 0.8929935496471104 0.0 0.099343869028973 0.0 0.20802894893889545 0.0; 0.0 0.7056617333187406 0.0 0.727383186592251 0.0 0.43232491362478714 0.0 0.17608839135755272 0.0 0.031215893175657875 0.0 0.008462232540611939 0.0 0.007805642592021827 0.0 0.0058898907783707 0.0 0.0032510837786969655 0.0 0.0043294605521709524 0.0 0.015063989711050139 0.0 0.04505972143073156 0.0 0.09019209062421171 0.0 0.1623060894233369 0.0 0.330319862936455 0.0 0.6195413820218004 0.0 0.8929935496471104 0.0 0.099343869028973 0.0 0.20802894893889545; 0.4762936766011714 0.0 0.8274253254947148 0.0 0.684355156914212 0.0 0.31361721871325354 0.0 0.05974351070319892 0.0 0.014477019448066432 0.0 0.009687280383372318 0.0 0.005209478186059629 0.0 0.0021066683717152566 0.0 0.0022373058013099847 0.0 0.0070032152426523055 0.0 0.019743616896741267 0.0 0.03775327725047467 0.0 0.06965472311410592 0.0 0.16349849133866073 0.0 0.37698623746985954 0.0 0.6693393737064282 0.0 0.9139186967162738 0.0 0.07348172648646419 0.0; 0.0 0.4762936766011714 0.0 0.8274253254947148 0.0 0.684355156914212 0.0 0.31361721871325354 0.0 0.05974351070319892 0.0 0.014477019448066432 0.0 0.009687280383372318 0.0 0.005209478186059629 0.0 0.0021066683717152566 0.0 0.0022373058013099847 0.0 0.0070032152426523055 0.0 0.019743616896741267 0.0 0.03775327725047467 0.0 0.06965472311410592 0.0 0.16349849133866073 0.0 0.37698623746985954 0.0 0.6693393737064282 0.0 0.9139186967162738 0.0 0.07348172648646419], 'U', 0), x = Tuple{SubArray{Float64, 1, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}, Int64}[([2.0, 0.0], 1), ([2.0, 0.0], 2), ([1.8540082032383924, 1.2341545321456486], 1), ([1.8540082032383924, 1.2341545321456486], 2), ([1.0968335224363546, 1.8385558167331164], 1), ([1.0968335224363546, 1.8385558167331164], 2), ([0.027323211201740832, 1.841475417119951], 1), ([0.027323211201740832, 1.841475417119951], 2), ([-0.9576760631528309, 1.7548385045374404], 1), ([-0.9576760631528309, 1.7548385045374404], 2), ([-1.6033711154446175, 1.309422408253612], 1), ([-1.6033711154446175, 1.309422408253612], 2), ([-1.715872629998389, 0.4966556829228458], 1), ([-1.715872629998389, 0.4966556829228458], 2), ([-1.6775781683557398, -0.31925509448967415], 1), ([-1.6775781683557398, -0.31925509448967415], 2), ([-1.5690755776160907, -1.0491673166662385], 1), ([-1.5690755776160907, -1.0491673166662385], 2), ([-1.1678000848335315, -1.4942786024881338], 1), ([-1.1678000848335315, -1.4942786024881338], 2), ([-0.529862858829821, -1.5824777916258712], 1), ([-0.529862858829821, -1.5824777916258712], 2), ([0.11595044911926827, -1.5550611911793628], 1), ([0.11595044911926827, -1.5550611911793628], 2), ([0.7182148654337269, -1.5062842011252175], 1), ([0.7182148654337269, -1.5062842011252175], 2), ([1.1993775429165743, -1.3174340760352319], 1), ([1.1993775429165743, -1.3174340760352319], 2), ([1.4264889494226718, -0.9090351474695391], 1), ([1.4264889494226718, -0.9090351474695391], 2), ([1.455311558337542, -0.39777369289497305], 1), ([1.455311558337542, -0.39777369289497305], 2), ([1.4322861125730242, 0.1045587063270885], 1), ([1.4322861125730242, 0.1045587063270885], 2), ([1.3984518014497875, 0.5791185888849205], 1), ([1.3984518014497875, 0.5791185888849205], 2), ([1.2893454342143849, 0.9891467953863277], 1), ([1.2893454342143849, 0.9891467953863277], 2)], δ = [1.6348716787607616, 16.818641655815743, -5.566949485624295, 11.184418243312281, -11.591919953777284, 3.276665626776825, -13.422253915649, -0.7755273361662167, -10.032201549055099, -3.303485791773058, -4.117179968156855, -7.302470297546803, -0.26863949530871606, -10.384576422883729, 0.92858206397124, -10.021212096059092, 2.913723573838093, -6.948565101148632, 6.272975144318091, -2.981660728222522, 8.126320496380359, -0.1765273453275174, 7.7761825417159, 0.5459129358742649, 6.535754242119202, 1.2008000796698663, 4.344121545992605, 3.5196268055351188, 1.4272996680390728, 5.8111909282382355, -0.2912600241090655, 6.267664513186784, -0.3241497105028688, 5.85500415756832, -0.6047558145099425, 5.473696010249138, -2.1931971623354243, 3.9377258709162692]))","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"and optimize its hyperparameters similar as above:","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"loss, buildgppost = gp_negloglikelihood(fin_gpfun, u_mo, y)\n\np0 = log.(ones(2))\nunfl(x) = exp.(x)\n\noptf = Optimization.OptimizationFunction((x, p) -> (loss ∘ unfl)(x), adtype)\noptprob = Optimization.OptimizationProblem(optf, p0)\n\noptp = Optimization.solve(optprob, NelderMead(); maxiters=300)\n\noptparams = unfl(optp)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"2-element Vector{Float64}:\n 1.5877737044464488\n 1.2949407244032454","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"We build a posterior GP with the optimized parameters,","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"optpost = buildgppost(optparams)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"and a GP ODE function","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"gpff = GPODEFunction(optpost)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"(::GPDiffEq.PullSolversModule.GPODEFunction{false, AbstractGPs.PosteriorGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.TransformedKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}, KernelFunctions.ARDTransform{Vector{Float64}}}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, KernelFunctions.MOInputIsotopicByFeatures{SubArray{Float64, 1, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}, KernelFunctions.ColVecs{Float64, Matrix{Float64}, SubArray{Float64, 1, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}}, Int64}, Vector{Float64}}}}, AbstractGPs.PosteriorGP{GPDiffEq.DerivativeGPModule.DerivativeGP{AbstractGPs.GP{AbstractGPs.ZeroMean{Float64}, KernelFunctions.IndependentMOKernel{KernelFunctions.TransformedKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}, KernelFunctions.ARDTransform{Vector{Float64}}}}}, AbstractGPs.ZeroMean{Float64}, GPDiffEq.DerivativeGPModule.DerivativeKernelCollection{KernelFunctions.IndependentMOKernel{KernelFunctions.TransformedKernel{KernelFunctions.SqExponentialKernel{Distances.Euclidean}, KernelFunctions.ARDTransform{Vector{Float64}}}}}}, NamedTuple{(:α, :C, :x, :δ), Tuple{Vector{Float64}, LinearAlgebra.Cholesky{Float64, Matrix{Float64}}, KernelFunctions.MOInputIsotopicByFeatures{SubArray{Float64, 1, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}, KernelFunctions.ColVecs{Float64, Matrix{Float64}, SubArray{Float64, 1, Matrix{Float64}, Tuple{Base.Slice{Base.OneTo{Int64}}, Int64}, true}}, Int64}, Vector{Float64}}}}}) (generic function with 1 method)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"Plotting the vector field","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"ug = range(-2.0, 2.0; length=6)\nug = vcat.(ug, ug')[:]\ngp_pred_mean = gpff.(ug)\ntrue_mean = trueODEfunc.(ug, 0, 0)\nquiver!(\n    getindex.(ug, 1),\n    getindex.(ug, 2);\n    quiver=(getindex.(true_mean, 1) / sf, getindex.(true_mean, 2) / sf),\n    label=\"true model\",\n    color=:black,\n)\nquiver!(\n    getindex.(ug, 1),\n    getindex.(ug, 2);\n    quiver=(getindex.(gp_pred_mean, 1) / sf, getindex.(gp_pred_mean, 2) / sf),\n    label=\"GP model\",\n    legend=:bottomright,\n    color=:darkgreen,\n)","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"(Image: )","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"We note that the direction of each gradient corresponds well. However, since the GP mean is zero in the absence of data, in accordance to its prior, the magnitude becomes too small outward from the initial trajectory. In the center, the GP slightly overestimates the magnitude.","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"We define a GP ODE model, which can be solved. Initially, the GP ODE corresponds well with the data, but diverges from the true solution as it starts to extrapolate beyond data.","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"gpprob = GPODEProblem(gpff, u0, tspan)\n\ngpsol = solve(gpprob, PULLEuler(); dt=0.001)","category":"page"},{"location":"examples/spiral/#Phase-plot","page":"Spiral ODE","title":"Phase plot","text":"","category":"section"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"plot!(sol; vars=(1, 2), label=\"ode\", linewidth=2.5, color=:navy)\nplot!(\n    getindex.(mean.(gpsol.u), 1),\n    getindex.(mean.(gpsol.u), 2);\n    label=\"gp\",\n    linewidth=2.7,\n    linestyle=:dashdot,\n    color=:magenta,\n)\nscatter!(ode_data[1, :], ode_data[2, :]; markersize=4, color=:black, label=\"data\")","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"(Image: )","category":"page"},{"location":"examples/spiral/#Time-Series-Plots","page":"Spiral ODE","title":"Time Series Plots","text":"","category":"section"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"plot(sol; label=[\"ode\" \"\"], color=[:skyblue :navy], linewidth=3)\nplot!(\n    gpsol.t,\n    reduce(hcat, mean.(gpsol.u))';\n    ribbons=sqrt.(reduce(hcat, var.(gpsol.u)))',\n    color=[:limegreen :darkgreen],\n    linewidth=2,\n    linestyle=:dashdot,\n    label=[\"gp ode\" \"\"],\n)\nscatter!(datatsteps, ode_data'; markersize=4, color=:black, label=[\"data\" \"\"])","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"(Image: )","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"","category":"page"},{"location":"examples/spiral/","page":"Spiral ODE","title":"Spiral ODE","text":"This page was generated using Literate.jl.","category":"page"}]
}
